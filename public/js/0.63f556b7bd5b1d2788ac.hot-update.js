webpackHotUpdate(0,{

/***/ 273:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("function validatePadding (padding) {\n  var arr = padding\n    .split(\" \")\n    .filter(function (item) { return item !== \"\"; })\n    .map(function (item) { return parseInt(item); });\n  if (arr.length < 1 || arr.length > 4) { return false; }\n  return arr.every(function (item) { return typeof item == \"number\" && item >= 0; });\n}\n\nfunction getPadding (padding) {\n  var arr = padding\n    .split(\" \")\n    .filter(function (item) { return item !== \"\"; })\n    .map(function (item) { return parseInt(item); });\n  switch (arr.length) {\n    case 4:\n      return { top: arr[0], right: arr[1], bottom: arr[2], left: arr[3] };\n      break;\n    case 3:\n      return { top: arr[0], right: arr[1], bottom: arr[2], left: arr[1] };\n      break;\n    case 2:\n      return { top: arr[0], right: arr[1], bottom: arr[0], left: arr[1] };\n      break;\n    default:\n      return { top: arr[0], right: arr[0], bottom: arr[0], left: arr[0] };\n      break;\n  }\n}\n\nvar TrendChartGrid = {\n  name: \"TrendChartGrid\",\n  props: {\n    boundary: {\n      required: true,\n      type: Object\n    },\n    verticalLines: {\n      default: false,\n      type: Boolean\n    },\n    verticalLinesNumber: {\n      default: 0,\n      type: Number\n    },\n    horizontalLines: {\n      default: false,\n      type: Boolean\n    },\n    horizontalLinesNumber: {\n      default: 0,\n      type: Number\n    }\n  },\n  methods: {\n    setVerticalLinesParams: function setVerticalLinesParams(n) {\n      var ref = this;\n      var boundary = ref.boundary;\n      var verticalLinesNumber = ref.verticalLinesNumber;\n      var step =\n        verticalLinesNumber > 1\n          ? (boundary.maxX - boundary.minX) / (verticalLinesNumber - 1)\n          : 0;\n      var x = boundary.minX + step * (n - 1);\n      var y1 = boundary.minY;\n      var y2 = boundary.maxY;\n      return {\n        x1: x,\n        x2: x,\n        y1: y1,\n        y2: y2,\n        stroke: \"rgba(0,0,0,0.1)\"\n      };\n    },\n    setHorizontalLinesParams: function setHorizontalLinesParams(n) {\n      var ref = this;\n      var boundary = ref.boundary;\n      var horizontalLinesNumber = ref.horizontalLinesNumber;\n      var step =\n        horizontalLinesNumber > 1\n          ? (boundary.maxY - boundary.minY) / (horizontalLinesNumber - 1)\n          : 0;\n      var y = boundary.maxY - step * (n - 1);\n      var x1 = boundary.minX;\n      var x2 = boundary.maxX;\n      return {\n        x1: x1,\n        x2: x2,\n        y1: y,\n        y2: y,\n        stroke: \"rgba(0,0,0,0.1)\"\n      };\n    }\n  },\n  render: function render(h) {\n    if (!this.verticalLines && !this.horizontalLines) { return; }\n\n    var children = [];\n\n    // Vertical Lines\n    if (this.verticalLines && this.verticalLinesNumber > 0) {\n      var lines = [];\n      for (var i = 1; i <= this.verticalLinesNumber; i++) {\n        lines.push(\n          h(\"line\", {\n            class: \"line\",\n            attrs: Object.assign({}, this.setVerticalLinesParams(i))\n          })\n        );\n      }\n      children.push(\n        h(\n          \"g\",\n          {\n            class: \"vertical\"\n          },\n          lines\n        )\n      );\n    }\n    // Horizontal Lines\n    if (this.horizontalLines && this.horizontalLinesNumber > 0) {\n      var lines$1 = [];\n      for (var i$1 = 1; i$1 <= this.horizontalLinesNumber; i$1++) {\n        lines$1.push(\n          h(\"line\", {\n            class: \"line\",\n            attrs: Object.assign({}, this.setHorizontalLinesParams(i$1))\n          })\n        );\n      }\n      children.push(\n        h(\n          \"g\",\n          {\n            class: \"horizontal\"\n          },\n          lines$1\n        )\n      );\n    }\n\n    // Render component\n    return h(\"g\", children);\n  }\n};\n\nvar TrendChartLabels = {\n  name: \"TrendChartLabels\",\n  props: {\n    boundary: {\n      required: true,\n      type: Object\n    },\n    minValue: {\n      type: Number\n    },\n    maxValue: {\n      type: Number\n    },\n    xLabels: {\n      type: Array\n    },\n    yLabels: {\n      type: Number\n    },\n    yLabelsTextFormatter: {\n      default: function (value) { return value; },\n      type: Function\n    }\n  },\n  data: function data() {\n    return {\n      xLabelHeight: null,\n      yLabelHeight: null\n    };\n  },\n  methods: {\n    setXLabelsParams: function setXLabelsParams(n) {\n      var ref = this;\n      var boundary = ref.boundary;\n      var xLabels = ref.xLabels;\n      var step = (boundary.maxX - boundary.minX) / (xLabels.length - 1);\n      var x = boundary.minX + step * n;\n      var y = boundary.maxY;\n      return { transform: (\"translate(\" + x + \", \" + y + \")\") };\n    },\n    setYLabelsParams: function setYLabelsParams(n) {\n      var ref = this;\n      var boundary = ref.boundary;\n      var yLabels = ref.yLabels;\n      var step = (boundary.maxY - boundary.minY) / (yLabels - 1);\n      var x = boundary.minX;\n      var y = boundary.maxY - step * n;\n      return { transform: (\"translate(\" + x + \", \" + y + \")\") };\n    }\n  },\n  mounted: function mounted() {\n    if (this.xLabels && this.xLabels.length) {\n      this.xLabelHeight = this.$refs.xLabels\n        .querySelector(\"text\")\n        .getBoundingClientRect().height;\n    }\n    if (this.yLabels && this.yLabels > 0) {\n      this.yLabelHeight = this.$refs.yLabels\n        .querySelector(\"text\")\n        .getBoundingClientRect().height;\n    }\n  },\n  render: function render(h) {\n    var this$1 = this;\n\n    if (\n      !(this.xLabels && this.xLabels.length) &&\n      !(this.yLabels && this.yLabels > 0)\n    )\n      { return; }\n\n    var children = [];\n\n    // x labels\n    if (this.xLabels && this.xLabels.length) {\n      children.push(\n        h(\n          \"g\",\n          {\n            class: \"x-labels\",\n            ref: \"xLabels\"\n          },\n          this.xLabels.map(function (label, i) {\n            return h(\n              \"g\",\n              {\n                class: \"label\",\n                attrs: Object.assign({}, this$1.setXLabelsParams(i))\n              },\n              [\n                h(\n                  \"text\",\n                  {\n                    attrs: {\n                      dy: this$1.xLabelHeight + 5,\n                      \"text-anchor\": \"middle\"\n                    }\n                  },\n                  label\n                ),\n                h(\"line\", { attrs: { stroke: \"rgba(0,0,0,0.1)\", y2: 5 } })\n              ]\n            );\n          })\n        )\n      );\n    }\n\n    // y labels\n    if (this.yLabels && this.yLabels > 0) {\n      var labels = [];\n      for (var i = 0; i < this.yLabels; i++) {\n        labels.push(\n          h(\n            \"g\",\n            {\n              class: \"label\",\n              attrs: Object.assign({}, this.setYLabelsParams(i))\n            },\n            [\n              h(\n                \"text\",\n                {\n                  attrs: {\n                    dx: -10,\n                    dy: this.yLabelHeight / 4,\n                    \"text-anchor\": \"end\"\n                  }\n                },\n                this.yLabelsTextFormatter(\n                  this.minValue +\n                    ((this.maxValue - this.minValue) / (this.yLabels - 1)) * i\n                )\n              ),\n              h(\"line\", { attrs: { stroke: \"rgba(0,0,0,0.1)\", x1: 0, x2: -5 } })\n            ]\n          )\n        );\n      }\n      children.push(\n        h(\n          \"g\",\n          {\n            class: \"y-labels\",\n            ref: \"yLabels\"\n          },\n          labels\n        )\n      );\n    }\n\n    // Render component\n    return h(\"g\", children);\n  }\n};\n\nfunction genPoints (arr, ref, max, min, maxAmount) {\n  var minX = ref.minX;\n  var minY = ref.minY;\n  var maxX = ref.maxX;\n  var maxY = ref.maxY;\n\n  arr = arr.map(function (item) { return (typeof item === \"number\" ? item : item.value); });\n  var minValue = min - 0.001;\n  var gridX = (maxX - minX) / (maxAmount - 1);\n  var gridY = (maxY - minY) / (max + 0.001 - minValue);\n\n  return arr.map(function (value, index) {\n    return {\n      x: index * gridX + minX,\n      y:\n        maxY -\n        (value - minValue) * gridY +\n        +(index === maxAmount - 1) * 0.00001 -\n        +(index === 0) * 0.00001\n    };\n  });\n}\n\nfunction genPath (pnts, smooth, ref) {\n  var maxY = ref.maxY;\n\n  var points = [].concat( pnts );\n  var start = points.shift();\n  var end = points[points.length - 1];\n  var distance = points[0].x - start.x;\n  var bezierX = distance / 2;\n\n  // Create Line Path\n  var linePath = \"M \" + (start.x) + \",\" + (start.y);\n  points.forEach(function (point, index) {\n    if (!smooth) { linePath += \" L\" + (point.x) + \",\" + (point.y); }\n    else {\n      var prev = points[index - 1] || start;\n      linePath += \" C \" + (bezierX + prev.x) + \",\" + (prev.y) + \" \" + (bezierX + prev.x) + \",\" + (point.y) + \" \" + (point.x) + \",\" + (point.y);\n    }\n  });\n\n  // Create Fill Path\n  var fillPath = linePath;\n  if (end.Y !== maxY) { fillPath += \" L\" + (end.x) + \",\" + maxY; }\n  if (start.Y !== maxY) { fillPath += \" L\" + (start.x) + \",\" + maxY; }\n  fillPath += \" Z\";\n\n  return { linePath: linePath, fillPath: fillPath };\n}\n\nvar TrendChartCurve = {\n  name: \"TrendChartCurve\",\n  props: {\n    boundary: {\n      required: true,\n      type: Object\n    },\n    minValue: {\n      required: true,\n      type: Number\n    },\n    maxValue: {\n      required: true,\n      type: Number\n    },\n    maxAmount: {\n      required: true,\n      type: Number\n    },\n    activeLineParams: {\n      type: Object\n    },\n    data: {\n      required: true,\n      type: Array\n    },\n    className: {\n      type: String\n    },\n    smooth: {\n      default: false,\n      type: Boolean\n    },\n    stroke: {\n      default: true,\n      type: Boolean\n    },\n    fill: {\n      default: false,\n      type: Boolean\n    },\n    showPoints: {\n      default: false,\n      type: Boolean\n    }\n  },\n  computed: {\n    points: function points() {\n      return genPoints(\n        this.data,\n        this.boundary,\n        this.maxValue,\n        this.minValue,\n        this.maxAmount\n      );\n    },\n    paths: function paths() {\n      return genPath(this.points, this.smooth, this.boundary);\n    }\n  },\n  render: function render(h) {\n    var this$1 = this;\n\n    var children = [];\n    // Fill path\n    if (this.fill && this.paths && this.paths.fillPath) {\n      children.push(\n        h(\"path\", {\n          class: \"fill\",\n          attrs: {\n            d: this.paths.fillPath,\n            fill: \"rgba(0,0,0,0.15)\"\n          }\n        })\n      );\n    }\n    // Stroke path\n    if (this.stroke && this.paths && this.paths.linePath) {\n      children.push(\n        h(\"path\", {\n          class: \"stroke\",\n          attrs: {\n            d: this.paths.linePath,\n            fill: \"none\",\n            stroke: \"black\"\n          }\n        })\n      );\n    }\n    // Points\n    if (this.showPoints && this.points) {\n      children.push(\n        h(\n          \"g\",\n          {\n            class: \"points\"\n          },\n          this.points.map(function (point, i) { return h(\"circle\", {\n              class: {\n                point: true,\n                \"is-active\":\n                  this$1.activeLineParams && this$1.activeLineParams.index === i\n              },\n              attrs: {\n                cx: point.x,\n                cy: point.y,\n                r: 2,\n                stroke: \"#000000\",\n                \"stroke-width\": 1\n              }\n            }); }\n          )\n        )\n      );\n    }\n\n    // Render component\n    return h(\n      \"g\",\n      {\n        class: this.className\n      },\n      children\n    );\n  }\n};\n\nvar TrendChart = {\n  name: \"TrendChart\",\n  components: { TrendChartGrid: TrendChartGrid, TrendChartLabels: TrendChartLabels, TrendChartCurve: TrendChartCurve },\n  props: {\n    datasets: {\n      required: true,\n      type: Array\n    },\n    grid: {\n      default: null,\n      type: Object\n    },\n    labels: {\n      default: null,\n      type: Object\n    },\n    max: {\n      type: Number\n    },\n    min: {\n      type: Number\n    },\n    padding: {\n      default: \"5\",\n      type: String,\n      validator: function validator(val) {\n        return validatePadding(val);\n      }\n    },\n    interactive: {\n      default: false,\n      type: Boolean\n    }\n  },\n  data: function data() {\n    return {\n      width: null,\n      height: null,\n      labelsOverflowObject: { top: 0, right: 0, bottom: 0, left: 0 },\n      activeLine: null,\n      activeLineParams: null\n    };\n  },\n  computed: {\n    paddingObject: function paddingObject() {\n      if (!this.padding) { return getPadding(\"0\"); }\n      return getPadding(this.padding);\n    },\n    boundary: function boundary() {\n      var ref = this;\n      var width = ref.width;\n      var height = ref.height;\n      var paddingObject = ref.paddingObject;\n      var labelsOverflowObject = ref.labelsOverflowObject;\n      var boundary = {\n        minX: paddingObject.left + labelsOverflowObject.left,\n        minY: paddingObject.top + labelsOverflowObject.top,\n        maxX: width - paddingObject.right - labelsOverflowObject.right,\n        maxY: height - paddingObject.bottom - labelsOverflowObject.bottom\n      };\n      return boundary;\n    },\n    params: function params() {\n      var maxValue = -Infinity;\n      var minValue = Infinity;\n      var maxAmount = 0;\n      this.datasets.forEach(function (dataset) {\n        var dataArr = dataset.data.map(function (item) { return typeof item === \"number\" ? item : item.value; }\n        );\n\n        var max = Math.max.apply(Math, dataArr);\n        if (max > maxValue) { maxValue = max; }\n\n        var min = Math.min.apply(Math, dataArr);\n        if (min < minValue) { minValue = min; }\n\n        if (dataArr.length > maxAmount) { maxAmount = dataArr.length; }\n      });\n      if (this.max !== undefined && this.max > maxValue) { maxValue = this.max; }\n      if (this.min !== undefined && this.min < minValue) { minValue = this.min; }\n      return { maxValue: maxValue, minValue: minValue, maxAmount: maxAmount };\n    },\n    chartOverlayParams: function chartOverlayParams() {\n      var ref = this;\n      var boundary = ref.boundary;\n      var width = boundary.maxX - boundary.minX;\n      var height = boundary.maxY - boundary.minY;\n      return {\n        x: boundary.minX,\n        y: boundary.minY,\n        width: width > 0 ? width : 0,\n        height: height > 0 ? height : 0,\n        opacity: 0\n      };\n    },\n    chartAxesXCoords: function chartAxesXCoords() {\n      var axes = [];\n      var step =\n        (this.boundary.maxX - this.boundary.minX) / (this.params.maxAmount - 1);\n      for (var i = 0; i < this.params.maxAmount; i++) {\n        axes.push(step * i + this.boundary.minX);\n      }\n      return axes;\n    }\n  },\n  methods: {\n    setSize: function setSize() {\n      var params = this.$refs[\"chart\"].getBoundingClientRect();\n      this.width = params.width;\n      this.height = params.height;\n    },\n    fitLabels: function fitLabels() {\n      var chart = this.$refs[\"chart\"];\n      var chartLabels = this.$refs[\"labels\"];\n      if (\n        chartLabels &&\n        ((chartLabels.xLabels && chartLabels.xLabels.length) ||\n          chartLabels.yLabels > 0)\n      ) {\n        var chartClientRect = chart.getBoundingClientRect();\n        var chartLabelsClientRect = chartLabels.$el.getBoundingClientRect();\n\n        var top =\n          chartClientRect.top -\n          chartLabelsClientRect.top +\n          this.paddingObject.top;\n        var right =\n          chartLabelsClientRect.right -\n          chartClientRect.right +\n          this.paddingObject.right;\n        var bottom =\n          chartLabelsClientRect.bottom -\n          chartClientRect.bottom +\n          this.paddingObject.bottom;\n        var left =\n          this.paddingObject.left -\n          chartLabelsClientRect.left +\n          chartClientRect.left;\n\n        this.labelsOverflowObject = {\n          top: top > 0 ? top : 0,\n          right: right > 0 ? right : 0,\n          bottom: bottom > 0 ? bottom : 0,\n          left: left > 0 ? left : 0\n        };\n      } else {\n        this.labelsOverflowObject = { top: 0, right: 0, bottom: 0, left: 0 };\n      }\n    },\n    init: function init() {\n      var this$1 = this;\n\n      this.setSize();\n      this.$nextTick(function () {\n        this$1.fitLabels();\n      });\n    },\n    getNearestCoordinate: function getNearestCoordinate(val) {\n      return (\n        this.chartAxesXCoords.reduce(\n          function (p, n) { return (Math.abs(p) > Math.abs(n - val) ? n - val : p); },\n          Infinity\n        ) + val\n      );\n    },\n    mouseMove: function mouseMove(e) {\n      var rect = this.$refs.chart.getBoundingClientRect();\n      this.activeLine = this.getNearestCoordinate(e.clientX - rect.left);\n    },\n    mouseOut: function mouseOut() {\n      this.activeLine = null;\n      this.activeLineParams = null;\n    },\n    onWindowResize: function onWindowResize() {\n      this.setSize();\n    }\n  },\n  watch: {\n    activeLine: function activeLine(val) {\n      var this$1 = this;\n\n      var data = [];\n      if (val) {\n        this.activeLineParams = {\n          index: this.chartAxesXCoords.indexOf(this.activeLine)\n        };\n        this.datasets.forEach(function (dataset) {\n          data.push(dataset.data[this$1.activeLineParams.index]);\n        });\n      }\n\n      this.$emit(\n        \"mouseMove\",\n        this.activeLineParams ? Object.assign({}, this.activeLineParams, {data: data}) : null\n      );\n    },\n    labels: {\n      handler: function handler() {\n        var this$1 = this;\n\n        // Reset labels rect overflow\n        this.labelsOverflowObject = { top: 0, right: 0, bottom: 0, left: 0 };\n        // Calculate new labels rect overflow\n        this.$nextTick(function () {\n          this$1.fitLabels();\n        });\n      },\n      deep: true\n    }\n  },\n  mounted: function mounted() {\n    this.init();\n    window.addEventListener(\"resize\", this.onWindowResize);\n  },\n  destroyed: function destroyed() {\n    window.removeEventListener(\"resize\", this.onWindowResize);\n  },\n  render: function render(h) {\n    var this$1 = this;\n\n    var children = [];\n\n    // Grid\n    if (this.grid) {\n      children.push(\n        h(TrendChartGrid, {\n          class: \"grid\",\n          attrs: {\n            verticalLines: this.grid.verticalLines,\n            verticalLinesNumber:\n              this.grid.verticalLinesNumber || this.params.maxAmount,\n            horizontalLines: this.grid.horizontalLines,\n            horizontalLinesNumber:\n              this.grid.horizontalLinesNumber ||\n              (this.labels && this.labels.yLabels) ||\n              0,\n            boundary: this.boundary\n          }\n        })\n      );\n    }\n\n    // Chart active line\n    if (this.interactive && this.chartOverlayParams) {\n      children.push(\n        h(\"line\", {\n          class: \"active-line\",\n          ref: \"active-line\",\n          attrs: {\n            x1: this.activeLine || this.boundary.minX,\n            x2: this.activeLine || this.boundary.minX,\n            y1: this.boundary.minY,\n            y2: this.boundary.maxY,\n            stroke: \"black\",\n            visibility: this.activeLine ? \"visible\" : \"hidden\"\n          }\n        })\n      );\n    }\n\n    // Labels\n    if (this.labels) {\n      children.push(\n        h(TrendChartLabels, {\n          class: \"labels\",\n          ref: \"labels\",\n          attrs: Object.assign({}, this.labels,\n            {boundary: this.boundary,\n            minValue: this.params.minValue,\n            maxValue: this.params.maxValue})\n        })\n      );\n    }\n\n    // Curves\n    this.datasets.map(function (dataset) {\n      children.push(\n        h(TrendChartCurve, {\n          class: \"curve\",\n          attrs: Object.assign({}, dataset,\n            {boundary: this$1.boundary,\n            minValue: this$1.params.minValue,\n            maxValue: this$1.params.maxValue,\n            maxAmount: this$1.params.maxAmount,\n            activeLineParams: this$1.activeLineParams})\n        })\n      );\n    });\n\n    // Chart overlay\n    if (this.interactive && this.chartOverlayParams) {\n      children.push(\n        h(\"rect\", {\n          ref: \"interactive-area\",\n          attrs: Object.assign({}, this.chartOverlayParams),\n          on: {\n            mousemove: function (e) { return this$1.mouseMove(e); },\n            mouseout: function () { return this$1.mouseOut(); }\n          }\n        })\n      );\n    }\n\n    // Render component\n    return h(\n      \"svg\",\n      {\n        class: \"vtc\",\n        ref: \"chart\",\n        attrs: {\n          xmlns: \"http://www.w3.org/2000/svg\",\n          width: \"100%\",\n          height: \"100%\"\n        }\n      },\n      children\n    );\n  }\n};\n\nTrendChart.install = function(Vue) {\n  Vue.component(TrendChart.name, TrendChart);\n};\n\nif (typeof window !== \"undefined\" && window.Vue) {\n  window.Vue.use(TrendChart);\n}\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (TrendChart);\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///273\n");

/***/ }),

/***/ 99:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("Object.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* WEBPACK VAR INJECTION */(function(global) {/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vue__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__App_vue__ = __webpack_require__(124);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__components_store__ = __webpack_require__(126);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_vue_router__ = __webpack_require__(32);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_vee_validate__ = __webpack_require__(5);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__config_js__ = __webpack_require__(241);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_vue_notification__ = __webpack_require__(242);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_vue_notification___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_6_vue_notification__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__components_LeftNaviBar_vue__ = __webpack_require__(243);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__components_TopHeader_vue__ = __webpack_require__(246);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9_vuejs_dialog__ = __webpack_require__(251);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9_vuejs_dialog___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_9_vuejs_dialog__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10_vuejs_dialog_dist_vuejs_dialog_min_css__ = __webpack_require__(252);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10_vuejs_dialog_dist_vuejs_dialog_min_css___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_10_vuejs_dialog_dist_vuejs_dialog_min_css__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__components_products_ProductTable_vue__ = __webpack_require__(54);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__components_purchaseorders_PurchaseOrders_vue__ = __webpack_require__(134);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13__components_passport_AuthorizedClients_vue__ = __webpack_require__(253);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14__components_passport_Clients_vue__ = __webpack_require__(256);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_15__components_passport_PersonalAccessTokens_vue__ = __webpack_require__(259);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_16_vue_trend_chart__ = __webpack_require__(273);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_17_v_tooltip__ = __webpack_require__(262);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_18_jquery__ = __webpack_require__(11);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_18_jquery___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_18_jquery__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_19__router_js__ = __webpack_require__(31);\n\n/**\n * First we will load all of this project's JavaScript dependencies which\n * includes Vue and other libraries. It is a great starting point when\n * building robust, powerful web applications using Vue and Laravel.\n */\n\n__webpack_require__(100);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n__WEBPACK_IMPORTED_MODULE_0_vue__[\"default\"].use(__WEBPACK_IMPORTED_MODULE_16_vue_trend_chart__[\"a\" /* default */]);\n\n__WEBPACK_IMPORTED_MODULE_0_vue__[\"default\"].use(__WEBPACK_IMPORTED_MODULE_3_vue_router__[\"a\" /* default */]);\n__WEBPACK_IMPORTED_MODULE_0_vue__[\"default\"].use(__WEBPACK_IMPORTED_MODULE_4_vee_validate__[\"b\" /* default */]);\n__WEBPACK_IMPORTED_MODULE_0_vue__[\"default\"].use(__WEBPACK_IMPORTED_MODULE_6_vue_notification___default.a);\n__WEBPACK_IMPORTED_MODULE_0_vue__[\"default\"].use(__WEBPACK_IMPORTED_MODULE_9_vuejs_dialog___default.a);\n\n\n\n__WEBPACK_IMPORTED_MODULE_0_vue__[\"default\"].use(__WEBPACK_IMPORTED_MODULE_17_v_tooltip__[\"a\" /* default */]);\n\n\nconst $ = __WEBPACK_IMPORTED_MODULE_18_jquery___default.a;\nwindow.$ = $;\n\n\n\n__WEBPACK_IMPORTED_MODULE_0_vue__[\"default\"].component('example-component', __webpack_require__(265));\n\nvar vm = new __WEBPACK_IMPORTED_MODULE_0_vue__[\"default\"]({\n  el: '#root',\n  router: __WEBPACK_IMPORTED_MODULE_19__router_js__[\"a\" /* router */], store: __WEBPACK_IMPORTED_MODULE_2__components_store__[\"a\" /* default */],\n  data: {\n    msg: \"Hello World\"\n  },\n  components: {\n    app: __WEBPACK_IMPORTED_MODULE_1__App_vue__[\"a\" /* default */],\n    product_table: __WEBPACK_IMPORTED_MODULE_11__components_products_ProductTable_vue__[\"a\" /* default */],\n    purchase_orders: __WEBPACK_IMPORTED_MODULE_12__components_purchaseorders_PurchaseOrders_vue__[\"a\" /* default */],\n    left_navi_bar: __WEBPACK_IMPORTED_MODULE_7__components_LeftNaviBar_vue__[\"a\" /* default */],\n    app_header: __WEBPACK_IMPORTED_MODULE_8__components_TopHeader_vue__[\"a\" /* default */],\n    passport_authorized_clients: __WEBPACK_IMPORTED_MODULE_13__components_passport_AuthorizedClients_vue__[\"a\" /* default */],\n    passport_clients: __WEBPACK_IMPORTED_MODULE_14__components_passport_Clients_vue__[\"a\" /* default */],\n    passport_personal_access_tokens: __WEBPACK_IMPORTED_MODULE_15__components_passport_PersonalAccessTokens_vue__[\"a\" /* default */]\n\n  },\n  mounted() {}\n\n});\n\nglobal.vm = vm;\n\nwindow.Vue = __WEBPACK_IMPORTED_MODULE_0_vue__[\"default\"];\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (__WEBPACK_IMPORTED_MODULE_0_vue__[\"default\"]);\n/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(6)))\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvYXNzZXRzL2pzL2FwcC5qcz9iMTVmIl0sIm5hbWVzIjpbInJlcXVpcmUiLCJWdWUiLCJ1c2UiLCIkIiwid2luZG93IiwiY29tcG9uZW50Iiwidm0iLCJlbCIsInJvdXRlciIsImRhdGEiLCJtc2ciLCJjb21wb25lbnRzIiwiYXBwIiwicHJvZHVjdF90YWJsZSIsInB1cmNoYXNlX29yZGVycyIsImxlZnRfbmF2aV9iYXIiLCJhcHBfaGVhZGVyIiwicGFzc3BvcnRfYXV0aG9yaXplZF9jbGllbnRzIiwicGFzc3BvcnRfY2xpZW50cyIsInBhc3Nwb3J0X3BlcnNvbmFsX2FjY2Vzc190b2tlbnMiLCJQZXJzb25hbEFjY2Vzc1Rva2VucyIsIm1vdW50ZWQiLCJnbG9iYWwiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQ0E7Ozs7OztBQU1BLG1CQUFBQSxDQUFRLEdBQVI7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFHQTs7QUFFQTtBQUNBO0FBQ0E7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsNENBQUFDLENBQUlDLEdBQUosQ0FBUSxpRUFBUjs7QUFHQSw0Q0FBQUQsQ0FBSUMsR0FBSixDQUFRLDJEQUFSO0FBQ0EsNENBQUFELENBQUlDLEdBQUosQ0FBUSw2REFBUjtBQUNBLDRDQUFBRCxDQUFJQyxHQUFKLENBQVEsd0RBQVI7QUFDQSw0Q0FBQUQsQ0FBSUMsR0FBSixDQUFRLG9EQUFSOztBQUVBOztBQUVBLDRDQUFBRCxDQUFJQyxHQUFKLENBQVEsMkRBQVI7O0FBUUE7QUFDQSxNQUFNQyxJQUFJLCtDQUFWO0FBQ0FDLE9BQU9ELENBQVAsR0FBV0EsQ0FBWDs7QUFLQTs7QUFHQSw0Q0FBQUYsQ0FBSUksU0FBSixDQUFjLG1CQUFkLEVBQW1DLG1CQUFBTCxDQUFRLEdBQVIsQ0FBbkM7O0FBRUEsSUFBSU0sS0FBSyxJQUFJLDRDQUFKLENBQVE7QUFDYkMsTUFBSSxPQURTO0FBRWJDLEVBQUEsbUVBRmEsRUFFTix5RUFGTTtBQUdiQyxRQUFNO0FBQ0ZDLFNBQUs7QUFESCxHQUhPO0FBTWJDLGNBQVc7QUFDVEMsU0FBSyx5REFESTtBQUVUQyxtQkFBZSx1RkFGTjtBQUdUQyxxQkFBa0IsK0ZBSFQ7QUFJVEMsbUJBQWUsNEVBSk47QUFLVEMsZ0JBQVcsMEVBTEY7QUFNVEMsaUNBQTRCLDRGQU5uQjtBQU9UQyxzQkFBaUIsa0ZBUFI7QUFRVEMscUNBQWdDLCtGQUFBQzs7QUFSdkIsR0FORTtBQWtCYkMsWUFBUyxDQUVSOztBQXBCWSxDQUFSLENBQVQ7O0FBd0JBQyxPQUFPaEIsRUFBUCxHQUFZQSxFQUFaOztBQUVBRixPQUFPSCxHQUFQLEdBQWEsNENBQWI7O0FBRUEsK0RBQWUsNENBQWYsRSIsImZpbGUiOiI5OS5qcyIsInNvdXJjZXNDb250ZW50IjpbIlxuLyoqXG4gKiBGaXJzdCB3ZSB3aWxsIGxvYWQgYWxsIG9mIHRoaXMgcHJvamVjdCdzIEphdmFTY3JpcHQgZGVwZW5kZW5jaWVzIHdoaWNoXG4gKiBpbmNsdWRlcyBWdWUgYW5kIG90aGVyIGxpYnJhcmllcy4gSXQgaXMgYSBncmVhdCBzdGFydGluZyBwb2ludCB3aGVuXG4gKiBidWlsZGluZyByb2J1c3QsIHBvd2VyZnVsIHdlYiBhcHBsaWNhdGlvbnMgdXNpbmcgVnVlIGFuZCBMYXJhdmVsLlxuICovXG5cbnJlcXVpcmUoJy4vYm9vdHN0cmFwJyk7XG5cblxuaW1wb3J0IFZ1ZSBmcm9tICd2dWUnXG5pbXBvcnQgQXBwIGZyb20gJy4vQXBwLnZ1ZSdcbmltcG9ydCBzdG9yZSBmcm9tICcuL2NvbXBvbmVudHMvc3RvcmUnXG5pbXBvcnQgVnVlUm91dGVyIGZyb20gJ3Z1ZS1yb3V0ZXInXG5pbXBvcnQgVmVlVmFsaWRhdGUgZnJvbSAndmVlLXZhbGlkYXRlJztcbmltcG9ydCBjb25maWcgZnJvbSAnLi9jb25maWcuanMnO1xuaW1wb3J0IE5vdGlmaWNhdGlvbnMgZnJvbSAndnVlLW5vdGlmaWNhdGlvbidcblxuaW1wb3J0IExlZnROYXZpQmFyIGZyb20gJy4vY29tcG9uZW50cy9MZWZ0TmF2aUJhci52dWUnXG5pbXBvcnQgVG9wSGVhZGVyIGZyb20gJy4vY29tcG9uZW50cy9Ub3BIZWFkZXIudnVlJ1xuXG5cbmltcG9ydCBWdWVqc0RpYWxvZyBmcm9tIFwidnVlanMtZGlhbG9nXCJcblxuaW1wb3J0ICd2dWVqcy1kaWFsb2cvZGlzdC92dWVqcy1kaWFsb2cubWluLmNzcyc7XG5pbXBvcnQgUHJvZHVjdFRhYmxlIGZyb20gJy4vY29tcG9uZW50cy9wcm9kdWN0cy9Qcm9kdWN0VGFibGUudnVlJ1xuaW1wb3J0IFB1cmNoYXNlT3JkZXJzIGZyb20gJy4vY29tcG9uZW50cy9wdXJjaGFzZW9yZGVycy9QdXJjaGFzZU9yZGVycy52dWUnXG5cblxuaW1wb3J0IEF1dGhvcml6ZWRDbGllbnRzIGZyb20gJy4vY29tcG9uZW50cy9wYXNzcG9ydC9BdXRob3JpemVkQ2xpZW50cy52dWUnXG5pbXBvcnQgQ2xpZW50cyBmcm9tICcuL2NvbXBvbmVudHMvcGFzc3BvcnQvQ2xpZW50cy52dWUnXG5pbXBvcnQgUGVyc29uYWxBY2Nlc3NUb2tlbnMgZnJvbSAnLi9jb21wb25lbnRzL3Bhc3Nwb3J0L1BlcnNvbmFsQWNjZXNzVG9rZW5zLnZ1ZSdcbmltcG9ydCBUcmVuZENoYXJ0IGZyb20gXCJ2dWUtdHJlbmQtY2hhcnRcIjtcblxuVnVlLnVzZShUcmVuZENoYXJ0KTtcblxuXG5WdWUudXNlKFZ1ZVJvdXRlcilcblZ1ZS51c2UoVmVlVmFsaWRhdGUpXG5WdWUudXNlKE5vdGlmaWNhdGlvbnMpXG5WdWUudXNlKFZ1ZWpzRGlhbG9nKVxuXG5pbXBvcnQgVlRvb2x0aXAgZnJvbSAndi10b29sdGlwJ1xuXG5WdWUudXNlKFZUb29sdGlwKVxuXG5cblxuXG5cblxuXG5pbXBvcnQgalF1ZXJ5IGZyb20gXCJqcXVlcnlcIlxuY29uc3QgJCA9IGpRdWVyeVxud2luZG93LiQgPSAkO1xuXG5cblxuXG5pbXBvcnQge3JvdXRlcn0gZnJvbSAnLi9yb3V0ZXIuanMnXG5cblxuVnVlLmNvbXBvbmVudCgnZXhhbXBsZS1jb21wb25lbnQnLCByZXF1aXJlKCcuL2NvbXBvbmVudHMvRXhhbXBsZUNvbXBvbmVudC52dWUnKSk7XG5cbnZhciB2bSA9IG5ldyBWdWUoe1xuICAgIGVsOiAnI3Jvb3QnLFxuICAgIHJvdXRlcixzdG9yZSxcbiAgICBkYXRhOiB7XG4gICAgICAgIG1zZzogXCJIZWxsbyBXb3JsZFwiXG4gICAgfSxcbiAgICBjb21wb25lbnRzOntcbiAgICAgXHRhcHA6IEFwcCxcbiAgICAgXHRwcm9kdWN0X3RhYmxlOiBQcm9kdWN0VGFibGUsXG4gICAgICBwdXJjaGFzZV9vcmRlcnMgOiBQdXJjaGFzZU9yZGVycyxcbiAgICAgIGxlZnRfbmF2aV9iYXI6IExlZnROYXZpQmFyLFxuICAgICAgYXBwX2hlYWRlcjpUb3BIZWFkZXIsXG4gICAgICBwYXNzcG9ydF9hdXRob3JpemVkX2NsaWVudHM6QXV0aG9yaXplZENsaWVudHMsXG4gICAgICBwYXNzcG9ydF9jbGllbnRzOkNsaWVudHMsXG4gICAgICBwYXNzcG9ydF9wZXJzb25hbF9hY2Nlc3NfdG9rZW5zOlBlcnNvbmFsQWNjZXNzVG9rZW5zXG5cblxuICAgIH0sXG4gICAgbW91bnRlZCgpe1xuICAgICAgXG4gICAgfVxuICAgIFxufSk7XG5cbmdsb2JhbC52bSA9IHZtO1xuXG53aW5kb3cuVnVlID0gVnVlO1xuXG5leHBvcnQgZGVmYXVsdCBWdWU7XG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vcmVzb3VyY2VzL2Fzc2V0cy9qcy9hcHAuanMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///99\n");

/***/ })

})