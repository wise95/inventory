webpackHotUpdate(0,{

/***/ 425:
/***/ (function(module, exports, __webpack_require__) {

eval("exports = module.exports = __webpack_require__(7)(true);\n// imports\n\n\n// module\nexports.push([module.i, \"\\n,box{\\n    padding:\\n}\\n\\n\", \"\", {\"version\":3,\"sources\":[\"/Applications/XAMPP/xamppfiles/htdocs/dev/cc/laravel/invetory/resources/assets/js/components/dashboard/resources/assets/js/components/dashboard/ProductChart.vue\"],\"names\":[],\"mappings\":\";AAyGA;IACA,QAAA;CACA\",\"file\":\"ProductChart.vue\",\"sourcesContent\":[\"<template>\\n<div class=\\\"box\\\">\\n<div>\\n    <apexchart width=\\\"380\\\" type=\\\"donut\\\" :options=\\\"options\\\" :series=\\\"series\\\"></apexchart>\\n</div>\\n</div>\\n</template>\\n\\n<script>\\nimport moment from \\\"moment\\\"\\nimport VueApexCharts from 'vue-apexcharts'\\n\\nexport default {\\n    components: {\\n        apexchart: VueApexCharts,\\n    },\\n    data() {\\n\\n        return {\\n\\n            options: {},\\n            series: [44, 55, 41, 17, 15]\\n\\n        }\\n    },\\n    mounted() {\\n\\n    },\\n\\n    methods: {\\n        updateData: function (timeline) {\\n            this.selection = timeline;\\n\\n            switch (timeline) {\\n                case 'one_month':\\n                    this.chartOptions = {\\n                        xaxis: {\\n                            min: new Date('28 Jan 2013').getTime(),\\n                            max: new Date('27 Feb 2013').getTime(),\\n                        }\\n                    }\\n                    break;\\n                case 'six_months':\\n                    this.chartOptions = {\\n                        xaxis: {\\n                            min: new Date('27 Sep 2012').getTime(),\\n                            max: new Date('27 Feb 2013').getTime(),\\n                        }\\n                    }\\n                    break;\\n                case 'one_year':\\n                    this.chartOptions = {\\n                        xaxis: {\\n                            min: new Date('27 Feb 2012').getTime(),\\n                            max: new Date('27 Feb 2013').getTime(),\\n                        }\\n                    }\\n                    break;\\n                case 'ytd':\\n                    this.chartOptions = {\\n                        xaxis: {\\n                            min: new Date('01 Jan 2013').getTime(),\\n                            max: new Date('27 Feb 2013').getTime(),\\n                        }\\n                    }\\n                    break;\\n                case 'all':\\n                    this.chartOptions = {\\n                        xaxis: {\\n                            min: undefined,\\n                            max: undefined,\\n                        }\\n                    }\\n                    break;\\n                default:\\n\\n            }\\n        },\\n\\n        fetch_data: function () {\\n\\n            axios.post('api/dashboard/salesorders')\\n                .then(response => {\\n\\n                    this.yTemp = response.data\\n\\n                    console.log(this.yTemp)\\n\\n                    this.series = [{\\n                        data: this.yTemp\\n                    }]\\n\\n                })\\n                .catch(error => {\\n                    console.log(error);\\n                });\\n\\n        },\\n    }\\n\\n}\\n</script>\\n\\n\\n<style>\\n,box{\\n    padding: \\n}\\n\\n</style>\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvYXNzZXRzL2pzL2NvbXBvbmVudHMvZGFzaGJvYXJkL1Byb2R1Y3RDaGFydC52dWU/ZDgzYiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBOzs7QUFHQTtBQUNBLGdDQUFpQyxpQkFBaUIsWUFBWSxtTkFBbU4sTUFBTSxVQUFVLG1VQUFtVSxtQkFBbUIsMENBQTBDLGVBQWUsb0JBQW9CLDJCQUEyQix3REFBd0QsT0FBTyxrQkFBa0IsU0FBUyxtQkFBbUIsMkNBQTJDLHdDQUF3QyxtQ0FBbUMsOEVBQThFLGtDQUFrQyxxS0FBcUssdUJBQXVCLDRCQUE0QiwrRUFBK0Usa0NBQWtDLHFLQUFxSyx1QkFBdUIsNEJBQTRCLDZFQUE2RSxrQ0FBa0MscUtBQXFLLHVCQUF1Qiw0QkFBNEIsd0VBQXdFLGtDQUFrQyxxS0FBcUssdUJBQXVCLDRCQUE0Qix3RUFBd0Usa0NBQWtDLHFIQUFxSCx1QkFBdUIsNEJBQTRCLDJDQUEyQyxXQUFXLHNDQUFzQyw0RkFBNEYseUlBQXlJLGlFQUFpRSxzQkFBc0Isb0NBQW9DLHlDQUF5QyxtQkFBbUIsRUFBRSxhQUFhLFFBQVEsS0FBSywrQkFBK0Isa0JBQWtCLGlDQUFpQzs7QUFFcGxHIiwiZmlsZSI6IjQyNS5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydHMgPSBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCIuLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9saWIvY3NzLWJhc2UuanNcIikodHJ1ZSk7XG4vLyBpbXBvcnRzXG5cblxuLy8gbW9kdWxlXG5leHBvcnRzLnB1c2goW21vZHVsZS5pZCwgXCJcXG4sYm94e1xcbiAgICBwYWRkaW5nOlxcbn1cXG5cXG5cIiwgXCJcIiwge1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wiL0FwcGxpY2F0aW9ucy9YQU1QUC94YW1wcGZpbGVzL2h0ZG9jcy9kZXYvY2MvbGFyYXZlbC9pbnZldG9yeS9yZXNvdXJjZXMvYXNzZXRzL2pzL2NvbXBvbmVudHMvZGFzaGJvYXJkL3Jlc291cmNlcy9hc3NldHMvanMvY29tcG9uZW50cy9kYXNoYm9hcmQvUHJvZHVjdENoYXJ0LnZ1ZVwiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiO0FBeUdBO0lBQ0EsUUFBQTtDQUNBXCIsXCJmaWxlXCI6XCJQcm9kdWN0Q2hhcnQudnVlXCIsXCJzb3VyY2VzQ29udGVudFwiOltcIjx0ZW1wbGF0ZT5cXG48ZGl2IGNsYXNzPVxcXCJib3hcXFwiPlxcbjxkaXY+XFxuICAgIDxhcGV4Y2hhcnQgd2lkdGg9XFxcIjM4MFxcXCIgdHlwZT1cXFwiZG9udXRcXFwiIDpvcHRpb25zPVxcXCJvcHRpb25zXFxcIiA6c2VyaWVzPVxcXCJzZXJpZXNcXFwiPjwvYXBleGNoYXJ0PlxcbjwvZGl2PlxcbjwvZGl2PlxcbjwvdGVtcGxhdGU+XFxuXFxuPHNjcmlwdD5cXG5pbXBvcnQgbW9tZW50IGZyb20gXFxcIm1vbWVudFxcXCJcXG5pbXBvcnQgVnVlQXBleENoYXJ0cyBmcm9tICd2dWUtYXBleGNoYXJ0cydcXG5cXG5leHBvcnQgZGVmYXVsdCB7XFxuICAgIGNvbXBvbmVudHM6IHtcXG4gICAgICAgIGFwZXhjaGFydDogVnVlQXBleENoYXJ0cyxcXG4gICAgfSxcXG4gICAgZGF0YSgpIHtcXG5cXG4gICAgICAgIHJldHVybiB7XFxuXFxuICAgICAgICAgICAgb3B0aW9uczoge30sXFxuICAgICAgICAgICAgc2VyaWVzOiBbNDQsIDU1LCA0MSwgMTcsIDE1XVxcblxcbiAgICAgICAgfVxcbiAgICB9LFxcbiAgICBtb3VudGVkKCkge1xcblxcbiAgICB9LFxcblxcbiAgICBtZXRob2RzOiB7XFxuICAgICAgICB1cGRhdGVEYXRhOiBmdW5jdGlvbiAodGltZWxpbmUpIHtcXG4gICAgICAgICAgICB0aGlzLnNlbGVjdGlvbiA9IHRpbWVsaW5lO1xcblxcbiAgICAgICAgICAgIHN3aXRjaCAodGltZWxpbmUpIHtcXG4gICAgICAgICAgICAgICAgY2FzZSAnb25lX21vbnRoJzpcXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuY2hhcnRPcHRpb25zID0ge1xcbiAgICAgICAgICAgICAgICAgICAgICAgIHhheGlzOiB7XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1pbjogbmV3IERhdGUoJzI4IEphbiAyMDEzJykuZ2V0VGltZSgpLFxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBtYXg6IG5ldyBEYXRlKCcyNyBGZWIgMjAxMycpLmdldFRpbWUoKSxcXG4gICAgICAgICAgICAgICAgICAgICAgICB9XFxuICAgICAgICAgICAgICAgICAgICB9XFxuICAgICAgICAgICAgICAgICAgICBicmVhaztcXG4gICAgICAgICAgICAgICAgY2FzZSAnc2l4X21vbnRocyc6XFxuICAgICAgICAgICAgICAgICAgICB0aGlzLmNoYXJ0T3B0aW9ucyA9IHtcXG4gICAgICAgICAgICAgICAgICAgICAgICB4YXhpczoge1xcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBtaW46IG5ldyBEYXRlKCcyNyBTZXAgMjAxMicpLmdldFRpbWUoKSxcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbWF4OiBuZXcgRGF0ZSgnMjcgRmViIDIwMTMnKS5nZXRUaW1lKCksXFxuICAgICAgICAgICAgICAgICAgICAgICAgfVxcbiAgICAgICAgICAgICAgICAgICAgfVxcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XFxuICAgICAgICAgICAgICAgIGNhc2UgJ29uZV95ZWFyJzpcXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuY2hhcnRPcHRpb25zID0ge1xcbiAgICAgICAgICAgICAgICAgICAgICAgIHhheGlzOiB7XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1pbjogbmV3IERhdGUoJzI3IEZlYiAyMDEyJykuZ2V0VGltZSgpLFxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBtYXg6IG5ldyBEYXRlKCcyNyBGZWIgMjAxMycpLmdldFRpbWUoKSxcXG4gICAgICAgICAgICAgICAgICAgICAgICB9XFxuICAgICAgICAgICAgICAgICAgICB9XFxuICAgICAgICAgICAgICAgICAgICBicmVhaztcXG4gICAgICAgICAgICAgICAgY2FzZSAneXRkJzpcXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuY2hhcnRPcHRpb25zID0ge1xcbiAgICAgICAgICAgICAgICAgICAgICAgIHhheGlzOiB7XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1pbjogbmV3IERhdGUoJzAxIEphbiAyMDEzJykuZ2V0VGltZSgpLFxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBtYXg6IG5ldyBEYXRlKCcyNyBGZWIgMjAxMycpLmdldFRpbWUoKSxcXG4gICAgICAgICAgICAgICAgICAgICAgICB9XFxuICAgICAgICAgICAgICAgICAgICB9XFxuICAgICAgICAgICAgICAgICAgICBicmVhaztcXG4gICAgICAgICAgICAgICAgY2FzZSAnYWxsJzpcXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuY2hhcnRPcHRpb25zID0ge1xcbiAgICAgICAgICAgICAgICAgICAgICAgIHhheGlzOiB7XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1pbjogdW5kZWZpbmVkLFxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBtYXg6IHVuZGVmaW5lZCxcXG4gICAgICAgICAgICAgICAgICAgICAgICB9XFxuICAgICAgICAgICAgICAgICAgICB9XFxuICAgICAgICAgICAgICAgICAgICBicmVhaztcXG4gICAgICAgICAgICAgICAgZGVmYXVsdDpcXG5cXG4gICAgICAgICAgICB9XFxuICAgICAgICB9LFxcblxcbiAgICAgICAgZmV0Y2hfZGF0YTogZnVuY3Rpb24gKCkge1xcblxcbiAgICAgICAgICAgIGF4aW9zLnBvc3QoJ2FwaS9kYXNoYm9hcmQvc2FsZXNvcmRlcnMnKVxcbiAgICAgICAgICAgICAgICAudGhlbihyZXNwb25zZSA9PiB7XFxuXFxuICAgICAgICAgICAgICAgICAgICB0aGlzLnlUZW1wID0gcmVzcG9uc2UuZGF0YVxcblxcbiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2codGhpcy55VGVtcClcXG5cXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuc2VyaWVzID0gW3tcXG4gICAgICAgICAgICAgICAgICAgICAgICBkYXRhOiB0aGlzLnlUZW1wXFxuICAgICAgICAgICAgICAgICAgICB9XVxcblxcbiAgICAgICAgICAgICAgICB9KVxcbiAgICAgICAgICAgICAgICAuY2F0Y2goZXJyb3IgPT4ge1xcbiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coZXJyb3IpO1xcbiAgICAgICAgICAgICAgICB9KTtcXG5cXG4gICAgICAgIH0sXFxuICAgIH1cXG5cXG59XFxuPC9zY3JpcHQ+XFxuXFxuXFxuPHN0eWxlPlxcbixib3h7XFxuICAgIHBhZGRpbmc6IFxcbn1cXG5cXG48L3N0eWxlPlxcblwiXSxcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuXG4vLyBleHBvcnRzXG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyP3NvdXJjZU1hcCEuL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9zdHlsZS1jb21waWxlcj97XCJ2dWVcIjp0cnVlLFwiaWRcIjpcImRhdGEtdi0wYThmOTljMVwiLFwic2NvcGVkXCI6ZmFsc2UsXCJoYXNJbmxpbmVDb25maWdcIjpmYWxzZX0hLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvc2VsZWN0b3IuanM/dHlwZT1zdHlsZXMmaW5kZXg9MCEuL3Jlc291cmNlcy9hc3NldHMvanMvY29tcG9uZW50cy9kYXNoYm9hcmQvUHJvZHVjdENoYXJ0LnZ1ZVxuLy8gbW9kdWxlIGlkID0gNDI1XG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///425\n");

/***/ })

})