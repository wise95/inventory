webpackHotUpdate(0,{

/***/ 69:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_axios__ = __webpack_require__(3);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_axios___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_axios__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_vuejs_datepicker__ = __webpack_require__(10);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_vee_validate__ = __webpack_require__(5);\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\n\n\n\nconst dict = {\n  custom: {\n    sonumber: {\n      required: 'Order# is empty'\n    },\n    name: {\n      required: () => 'Your name is empty'\n    }\n  }\n};\n\n__WEBPACK_IMPORTED_MODULE_2_vee_validate__[\"a\" /* Validator */].localize('en', dict);\n\nfunction test() {\n  alert('inside test');\n}\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  name: \"purchaseorders\",\n  data() {\n    return {\n      invoice: [],\n      salesorder: [],\n      payments: [],\n      invnumber: '',\n      sonumber: '',\n      qty: '',\n      customer_id: '',\n      products: [],\n      isAddActive: false,\n      products: [],\n      keyword: '',\n      key: '',\n      unit_price: '',\n      qty: '',\n      product_grid: [],\n      customers: [],\n      customer: '',\n      tax_percentage: '',\n      created_date: new Date(),\n      status: 'Created',\n      shipment_date: '',\n      shipment_date_error: false,\n      tax_id: '',\n\n      total_tax: '',\n      tax_percentage: '',\n      discount: '',\n      discount_type: 'd',\n      discount_total: '',\n      due_date: '',\n      due_date_error: false\n\n    };\n  },\n\n  components: {\n\n    Datepicker: __WEBPACK_IMPORTED_MODULE_1_vuejs_datepicker__[\"a\" /* default */]\n  },\n\n  watch: {},\n\n  mounted() {\n\n    __WEBPACK_IMPORTED_MODULE_0_axios___default.a.get('api/invoices/' + this.$route.params.id).then(response => {\n      this.invoice = response.data.data;\n      console.log(this.$route.params.id);\n\n      this.invoice.products.forEach((row, i) => {\n        row.qtynew = row.qty;\n        this.product_grid.push(row);\n        this.payments = this.invoice.payments;\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  },\n\n  methods: {\n\n    create_pdf: function () {\n\n      __WEBPACK_IMPORTED_MODULE_0_axios___default()('api/pdf/invoice/' + this.$route.params.id, {\n        method: 'GET',\n        responseType: 'blob' //Force to receive data in a Blob Format\n      }).then(response => {\n        //Create a Blob from the PDF Stream\n        const file = new Blob([response.data], { type: 'application/pdf' }); //Build a URL from the file\n        const fileURL = URL.createObjectURL(file); //Open the URL on new Window\n        window.open(fileURL);\n      }).catch(error => {\n        console.log(error);\n      });\n    },\n\n    sub_total: function () {\n      let sum = 0;\n      this.product_grid.forEach((row, i) => {\n        sum = sum + row.unit_price * row.invoiced_qty;\n      });\n      return sum;\n    },\n\n    caculate_tax: function () {\n      this.total_tax = (this.sub_total() * this.invoice.salesorder.tax_percentage / 100).toFixed(2);\n      return this.total_tax;\n    },\n\n    total: function () {\n      return Number(this.sub_total()) + Number(this.caculate_tax()) - Number(this.caculate_discount());\n    },\n\n    caculate_discount: function () {\n      if (this.invoice.salesorder.discount_type == 'd') {\n        this.discount_total = this.invoice.salesorder.discount;\n      }\n\n      if (this.invoice.salesorder.discount_type == 'p') {\n        this.discount_total = (Number(this.sub_total()) + Number(this.total_tax)) * this.invoice.salesorder.discount / 100;\n      }\n\n      return this.discount_total.toFixed(2);\n    }\n  }\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///69\n");

/***/ })

})