webpackHotUpdate(0,{

/***/ 415:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_moment__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_moment___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_moment__);\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  data() {\n    return {\n      purchase_order_menu: false,\n      dataset: [],\n      labels: {\n        xLabels: [],\n        yLabels: 5,\n        yLabelsTextFormatter: val => \"$\" + Math.round(val * 100) / 100\n      },\n      grid: {\n        verticalLines: true,\n        verticalLinesNumber: 1,\n        horizontalLines: true,\n        horizontalLinesNumber: 1\n      }\n    };\n  },\n  mounted() {\n\n    this.initPopper();\n\n    this.$http.get(\"https://api.coindesk.com/v1/bpi/historical/close.json?start=2019-01-01&end=2019-01-31\").then(res => {\n      const data = res.data.bpi;\n      for (let key in data) {\n        this.dataset.push(data[key]);\n        this.labels.xLabels.push(__WEBPACK_IMPORTED_MODULE_0_moment___default()(key).format(\"MM/DD\"));\n      }\n    });\n\n    document.addEventListener('click', this.close);\n  },\n  methods: {\n    initPopper() {\n      const chart = document.querySelector(\".random-chart\");\n      const ref = chart.querySelector(\".active-line\");\n      const tooltip = this.$refs.tooltip;\n      this.popper = new Popper(ref, tooltip, {\n        placement: \"right\",\n        modifiers: {\n          offset: { offset: \"0,10\" },\n          preventOverflow: {\n            boundariesElement: chart\n          }\n        }\n      });\n    },\n    onMouseMove(params) {\n      this.popperIsActive = !!params;\n      this.popper.scheduleUpdate();\n      this.tooltipData = params || null;\n    }\n  }\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vcmVzb3VyY2VzL2Fzc2V0cy9qcy9jb21wb25lbnRzL2Rhc2hib2FyZC9TYWxlc0NoYXJ0LnZ1ZT8zMDBhIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQWlEQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdDQURBO0FBRUEsaUJBRkE7QUFHQTtBQUNBLG1CQURBO0FBRUEsa0JBRkE7QUFHQTtBQUhBLE9BSEE7QUFRQTtBQUNBLDJCQURBO0FBRUEsOEJBRkE7QUFHQSw2QkFIQTtBQUlBO0FBSkE7QUFSQTtBQWVBLEdBakJBO0FBa0JBOztBQUVBOztBQUVBLGVBQ0EsR0FEQSxDQUVBLHVGQUZBLEVBSUEsSUFKQSxDQUlBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBVkE7O0FBYUE7QUFFQSxHQXJDQTtBQXNDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwQkFEQTtBQUVBO0FBQ0Esb0NBREE7QUFFQTtBQUNBO0FBREE7QUFGQTtBQUZBO0FBU0EsS0FkQTtBQWVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFuQkE7QUF0Q0EiLCJmaWxlIjoiNDE1LmpzIiwic291cmNlc0NvbnRlbnQiOlsiPHRlbXBsYXRlPlxuXG48c2VjdGlvbj5cblxuIFxuXG4gIDxkaXYgY2xhc3M9XCJiaXRjb2luLXByaWNlXCI+XG4gICAgPHN2ZyBzdHlsZT1cIndpZHRoOjA7IGhlaWdodDowOyBwb3NpdGlvbjphYnNvbHV0ZTtcIiBhcmlhLWhpZGRlbj1cInRydWVcIiBmb2N1c2FibGU9XCJmYWxzZVwiPlxuICAgICAgPGRlZnM+XG4gICAgICAgIDxsaW5lYXJHcmFkaWVudCBpZD1cImJ0Y0ZpbGxcIiB4MT1cIjFcIiB4Mj1cIjFcIiB5MT1cIjBcIiB5Mj1cIjFcIj5cbiAgICAgICAgICA8c3RvcCBvZmZzZXQ9XCIwJVwiIHN0b3AtY29sb3I9XCIjZjY5MTE5XCI+PC9zdG9wPlxuICAgICAgICAgIDxzdG9wIG9mZnNldD1cIjEwMCVcIiBzdG9wLWNvbG9yPVwiI2ZmZmZmZlwiPjwvc3RvcD5cbiAgICAgICAgPC9saW5lYXJHcmFkaWVudD5cbiAgICAgIDwvZGVmcz5cbiAgICA8L3N2Zz5cbiAgICA8dHJlbmQtY2hhcnRcbiAgICAgIHYtaWY9XCJkYXRhc2V0Lmxlbmd0aFwiXG4gICAgICA6ZGF0YXNldHM9XCJbe2RhdGE6IGRhdGFzZXQsIGZpbGw6IGZhbHNlLCBjbGFzc05hbWU6ICdjdXJ2ZS1idGMnfV1cIlxuICAgICAgOmxhYmVscz1cImxhYmVsc1wiXG4gICAgICA6bWluPVwiMFwiXG4gICAgICA6Z3JpZD1cImdyaWRcIlxuICAgICAgOmludGVyYWN0aXZlPXRydWVcbiAgICAgIDpzaG93UG9pbnRzPXRydWVcbiAgICAgIEBtb3VzZU1vdmU9XCJvbk1vdXNlTW92ZVwiIGNsYXNzPVwicmFuZG9tLWNoYXJ0XCJcbiAgICAvPlxuXG4gICAgXG5cblxuICAgIDxkaXYgaWQ9XCJwb3BcIiByb2xlPVwidG9vbHRpcFwiIHJlZj1cInRvb2x0aXBcIiBjbGFzcz1cInRvb2x0aXBcIiA6Y2xhc3M9XCJ7J2lzLWFjdGl2ZSc6IHRvb2x0aXBEYXRhfVwiPlxuICAgICAgPGRpdiBjbGFzcz1cInRvb2x0aXAtY29udGFpbmVyXCIgdi1pZj1cInRvb2x0aXBEYXRhXCI+XG4gICAgICAgIDxzdHJvbmc+e3tsYWJlbHMueExhYmVsc1t0b29sdGlwRGF0YS5pbmRleF19fTwvc3Ryb25nPlxuICAgICAgICA8ZGl2IGNsYXNzPVwidG9vbHRpcC1kYXRhXCI+XG4gICAgICAgICAgPGRpdiBjbGFzcz1cInRvb2x0aXAtZGF0YS1pdGVtIHRvb2x0aXAtZGF0YS1pdGVtLS0xXCI+e3t0b29sdGlwRGF0YS5kYXRhWzBdfX08L2Rpdj5cbiAgICAgICAgICA8ZGl2IGNsYXNzPVwidG9vbHRpcC1kYXRhLWl0ZW0gdG9vbHRpcC1kYXRhLWl0ZW0tLTJcIj57e3Rvb2x0aXBEYXRhLmRhdGFbMV19fTwvZGl2PlxuICAgICAgICAgIDxkaXYgY2xhc3M9XCJ0b29sdGlwLWRhdGEtaXRlbSB0b29sdGlwLWRhdGEtaXRlbS0tM1wiPnt7dG9vbHRpcERhdGEuZGF0YVsyXX19PC9kaXY+XG4gICAgICAgIDwvZGl2PlxuICAgICAgPC9kaXY+XG4gICAgPC9kaXY+XG5cblxuXG4gIDwvZGl2PlxuXG4gIDwvc2VjdGlvbj5cblxuXG48L3RlbXBsYXRlPlxuPHNjcmlwdD5cbmltcG9ydCBtb21lbnQgZnJvbSBcIm1vbWVudFwiXG5leHBvcnQgZGVmYXVsdCB7XG4gIGRhdGEoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHB1cmNoYXNlX29yZGVyX21lbnU6ZmFsc2UsXG4gICAgICBkYXRhc2V0OiBbXSxcbiAgICAgIGxhYmVsczoge1xuICAgICAgICB4TGFiZWxzOiBbXSxcbiAgICAgICAgeUxhYmVsczogNSxcbiAgICAgICAgeUxhYmVsc1RleHRGb3JtYXR0ZXI6IHZhbCA9PiBcIiRcIiArIE1hdGgucm91bmQodmFsICogMTAwKSAvIDEwMFxuICAgICAgfSxcbiAgICAgIGdyaWQ6IHtcbiAgICAgICAgdmVydGljYWxMaW5lczogdHJ1ZSxcbiAgICAgICAgdmVydGljYWxMaW5lc051bWJlcjogMSxcbiAgICAgICAgaG9yaXpvbnRhbExpbmVzOiB0cnVlLFxuICAgICAgICBob3Jpem9udGFsTGluZXNOdW1iZXI6IDFcbiAgICAgIH1cbiAgICB9O1xuICB9LFxuICBtb3VudGVkKCkge1xuXG4gICAgdGhpcy5pbml0UG9wcGVyKCk7XG5cbiAgICB0aGlzLiRodHRwXG4gICAgICAuZ2V0KFxuICAgICAgICBcImh0dHBzOi8vYXBpLmNvaW5kZXNrLmNvbS92MS9icGkvaGlzdG9yaWNhbC9jbG9zZS5qc29uP3N0YXJ0PTIwMTktMDEtMDEmZW5kPTIwMTktMDEtMzFcIlxuICAgICAgKVxuICAgICAgLnRoZW4ocmVzID0+IHtcbiAgICAgICAgY29uc3QgZGF0YSA9IHJlcy5kYXRhLmJwaTtcbiAgICAgICAgZm9yIChsZXQga2V5IGluIGRhdGEpIHtcbiAgICAgICAgICB0aGlzLmRhdGFzZXQucHVzaChkYXRhW2tleV0pO1xuICAgICAgICAgIHRoaXMubGFiZWxzLnhMYWJlbHMucHVzaChtb21lbnQoa2V5KS5mb3JtYXQoXCJNTS9ERFwiKSk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuXG4gICAgICBcbiAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIHRoaXMuY2xvc2UpXG4gIFxuICB9LFxuICAgbWV0aG9kczoge1xuICAgIGluaXRQb3BwZXIoKSB7XG4gICAgICBjb25zdCBjaGFydCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucmFuZG9tLWNoYXJ0XCIpO1xuICAgICAgY29uc3QgcmVmID0gY2hhcnQucXVlcnlTZWxlY3RvcihcIi5hY3RpdmUtbGluZVwiKTtcbiAgICAgIGNvbnN0IHRvb2x0aXAgPSB0aGlzLiRyZWZzLnRvb2x0aXA7XG4gICAgICB0aGlzLnBvcHBlciA9IG5ldyBQb3BwZXIocmVmLCB0b29sdGlwLCB7XG4gICAgICAgIHBsYWNlbWVudDogXCJyaWdodFwiLFxuICAgICAgICBtb2RpZmllcnM6IHtcbiAgICAgICAgICBvZmZzZXQ6IHsgb2Zmc2V0OiBcIjAsMTBcIiB9LFxuICAgICAgICAgIHByZXZlbnRPdmVyZmxvdzoge1xuICAgICAgICAgICAgYm91bmRhcmllc0VsZW1lbnQ6IGNoYXJ0XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9LFxuICAgIG9uTW91c2VNb3ZlKHBhcmFtcykge1xuICAgICAgdGhpcy5wb3BwZXJJc0FjdGl2ZSA9ICEhcGFyYW1zO1xuICAgICAgdGhpcy5wb3BwZXIuc2NoZWR1bGVVcGRhdGUoKTtcbiAgICAgIHRoaXMudG9vbHRpcERhdGEgPSBwYXJhbXMgfHwgbnVsbDtcbiAgICB9XG4gIH1cbn07XG48L3NjcmlwdD5cblxuPHN0eWxlIGxhbmc9XCJzY3NzXCI+XG4uYml0Y29pbi1wcmljZSB7XG4gIC52dGMge1xuICAgIGhlaWdodDogMjUwcHg7XG4gICAgZm9udC1zaXplOiAxMnB4O1xuICAgIEBtZWRpYSAobWluLXdpZHRoOiA2OTlweCkge1xuICAgICAgaGVpZ2h0OiAzNTBweDtcbiAgICB9XG4gIH1cbiAgLmdyaWQsXG4gIC5sYWJlbHMge1xuICAgIGxpbmUge1xuICAgICAgc3Ryb2tlOiByZ2JhKCNmNjkxMTksIDAuNSk7XG4gICAgfVxuICB9XG4gIC54LWxhYmVscyB7XG4gICAgLmxhYmVsIHtcbiAgICAgIHRleHQge1xuICAgICAgICBkaXNwbGF5OiBub25lO1xuICAgICAgfVxuICAgICAgbGluZSB7XG4gICAgICAgIG9wYWNpdHk6IDAuMztcbiAgICAgIH1cbiAgICAgICY6bnRoLWNoaWxkKDZuICsgMSksXG4gICAgICAmOmZpcnN0LWNoaWxkIHtcbiAgICAgICAgdGV4dCB7XG4gICAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgIH1cbiAgICAgICAgbGluZSB7XG4gICAgICAgICAgb3BhY2l0eTogMTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfVxuICAuY3VydmUtYnRjIHtcbiAgICAuc3Ryb2tlIHtcbiAgICAgIHN0cm9rZTogI2Y2OTExOTtcbiAgICAgIHN0cm9rZS13aWR0aDogMjtcbiAgICB9XG4gICAgLmZpbGwge1xuICAgICAgZmlsbDogdXJsKCNidGNGaWxsKTtcbiAgICAgIGZpbGwtb3BhY2l0eTogMC41O1xuICAgIH1cbiAgfVxuXG4gICAgLnRvb2x0aXAge1xuICAgICY6bm90KC5pcy1hY3RpdmUpIHtcbiAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgfVxuICAgIHBhZGRpbmc6IDEwcHg7XG4gICAgYmFja2dyb3VuZDogI2ZmZjtcbiAgICBib3gtc2hhZG93OiAwIDAgNXB4IHJnYmEoMCwgMCwgMCwgMC4yKTtcbiAgICBwb2ludGVyLWV2ZW50czogbm9uZTtcbiAgICAmLWRhdGEge1xuICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICYtaXRlbSB7XG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICAgICY6bm90KDpmaXJzdC1jaGlsZCkge1xuICAgICAgICAgIG1hcmdpbi1sZWZ0OiAyMHB4O1xuICAgICAgICB9XG4gICAgICAgICY6YmVmb3JlIHtcbiAgICAgICAgICBjb250ZW50OiBcIlwiO1xuICAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICAgIHdpZHRoOiAxNXB4O1xuICAgICAgICAgIGhlaWdodDogMTVweDtcbiAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDVweDtcbiAgICAgICAgfVxuICAgICAgICAmLS0xOmJlZm9yZSB7XG4gICAgICAgICAgYmFja2dyb3VuZDogI2ZiYWM5MTtcbiAgICAgICAgfVxuICAgICAgICAmLS0yOmJlZm9yZSB7XG4gICAgICAgICAgYmFja2dyb3VuZDogI2ZiZTFiNjtcbiAgICAgICAgfVxuICAgICAgICAmLS0zOmJlZm9yZSB7XG4gICAgICAgICAgYmFja2dyb3VuZDogIzdmZGZkNDtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfVxufVxuPC9zdHlsZT5cblxuXG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gcmVzb3VyY2VzL2Fzc2V0cy9qcy9jb21wb25lbnRzL2Rhc2hib2FyZC9TYWxlc0NoYXJ0LnZ1ZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///415\n");

/***/ })

})