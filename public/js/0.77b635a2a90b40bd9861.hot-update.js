webpackHotUpdate(0,{

/***/ 67:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_axios__ = __webpack_require__(3);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_axios___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_axios__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_vuejs_datepicker__ = __webpack_require__(10);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_vee_validate__ = __webpack_require__(5);\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\n\n\n\nconst dict = {\n  custom: {\n    sonumber: {\n      required: 'Order# is empty'\n    },\n    name: {\n      required: () => 'Your name is empty'\n    }\n  }\n};\n\n__WEBPACK_IMPORTED_MODULE_2_vee_validate__[\"a\" /* Validator */].localize('en', dict);\n\nfunction test() {\n  alert('inside test');\n}\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  name: \"purchaseorders\",\n  data() {\n    return {\n      salesorder: [],\n      invnumber: '',\n      sonumber: '',\n      qty: '',\n      customer_id: '',\n      products: [],\n      isAddActive: false,\n      products: [],\n      keyword: '',\n      key: '',\n      unit_price: '',\n      qty: '',\n      product_grid: [],\n      customers: [],\n      customer: '',\n      tax_percentage: '',\n      created_date: new Date(),\n      status: 'Created',\n      shipment_date: '',\n      shipment_date_error: false,\n      tax_id: '',\n      taxes: [],\n      total_tax: '',\n      tax_percentage: '',\n      discount: '',\n      discount_type: 'd',\n      discount_total: '',\n      due_date: '',\n      due_date_error: false\n\n    };\n  },\n\n  components: {\n\n    Datepicker: __WEBPACK_IMPORTED_MODULE_1_vuejs_datepicker__[\"a\" /* default */]\n  },\n\n  watch: {},\n\n  mounted() {\n\n    __WEBPACK_IMPORTED_MODULE_0_axios___default.a.get('api/salesorders/' + this.$route.params.id).then(response => {\n      this.salesorder = response.data.data;\n      console.log(this.$route.params.id);\n\n      this.salesorder.products.forEach((row, i) => {\n        //row.qtynew=1\n        //row.qty= JSON.parse(JSON.stringify(row.qtynew));\n        Vue.set(row, 'qtynew', row.qty);\n        this.product_grid.push(row);\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n\n    __WEBPACK_IMPORTED_MODULE_0_axios___default.a.get('api/invoices/get/nextinvnumber').then(response => {\n      this.invnumber = response.data;\n      console.log(response);\n    }).catch(function (error) {\n      console.log(error);\n    });\n\n    __WEBPACK_IMPORTED_MODULE_0_axios___default.a.get('api/customers').then(response => {\n      this.customers = response.data.data;\n    }).catch(error => {\n      console.log(error);\n    });\n\n    __WEBPACK_IMPORTED_MODULE_0_axios___default.a.get('api/tax').then(response => {\n      this.taxes = response.data.data;\n    }).catch(error => {\n      console.log(error);\n    });\n\n    __WEBPACK_IMPORTED_MODULE_0_axios___default.a.get('api/products').then(response => {\n      this.productspro = response.data.data;\n    }).catch(error => {\n      console.log(error);\n    });\n  },\n\n  methods: {\n\n    change_customer: function () {\n      this.customers.forEach((row, i) => {\n        if (this.customer_id == row.id) {\n          this.customer = row;\n          return;\n        }\n      });\n    },\n\n    change_tax: function () {\n\n      this.taxes.forEach((row, i) => {\n        if (this.salesorder.tax_id == row.id) {\n          this.salesorder.tax_percentage = row.tax_percentage;\n\n          return;\n        }\n      });\n    },\n\n    change_discount_type: function () {\n\n      this.caculate_discount();\n    },\n\n    change_shipment_date: function () {\n      this.shipment_date_error = false;\n\n      //alert(this.salesorder.shipment_date)\n    },\n\n    create_new: function () {\n      let self = this;\n      //alert(this.purchase_order_number);\n\n      // if(this.shipment_date==''){\n      //    this.shipment_date_error=true\n      //  return \n      // }\n\n      let payload = {\n\n        products: this.product_grid,\n        invnumber: this.invnumber,\n        status: this.status,\n        salesorder_id: this.salesorder.id,\n        due_date: this.due_date,\n        total: this.total(),\n\n        sonumber: this.sonumber,\n        customer_id: this.customer_id,\n        order_date: this.created_date,\n        shipment_date: this.shipment_date,\n        status: this.status,\n        discount: this.discount,\n        discount_type: this.discount_type,\n        tax_percentage: 10,\n        tax_code: 'GST'\n\n      };\n\n      __WEBPACK_IMPORTED_MODULE_0_axios___default.a.post('api/invoices', payload).then(function (response) {\n        self.$router.push(\"/invoices\");\n        console.log(response);\n      }).catch(function (error) {\n        console.log(error);\n      });\n    },\n\n    delete_row: function ($event) {\n      console.log($event.target);\n      //alert($event.target.id)\n      this.product_grid.splice($event.target.id, 1);\n    },\n\n    sub_total: function () {\n      let sum = 0;\n      this.product_grid.forEach((row, i) => {\n        sum = sum + row.unit_price * row.qtynew;\n      });\n      return sum;\n    },\n\n    caculate_tax: function () {\n      this.total_tax = (this.sub_total() * this.salesorder.tax_percentage / 100).toFixed(2);\n      return this.total_tax;\n    },\n\n    total: function () {\n      return Number(this.sub_total()) + Number(this.caculate_tax()) - Number(this.caculate_discount());\n    },\n\n    caculate_discount: function () {\n      if (this.salesorder.discount_type == 'd') {\n        this.discount_total = this.salesorder.discount;\n      }\n\n      if (this.salesorder.discount_type == 'p') {\n        this.discount_total = (Number(this.sub_total()) + Number(this.total_tax)) * this.salesorder.discount / 100;\n        console.log(this.sub_total());\n      }\n\n      return this.discount_total;\n    }\n  }\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vcmVzb3VyY2VzL2Fzc2V0cy9qcy9jb21wb25lbnRzL3NhbGVzb3JkZXJzL0NyZWF0ZUludm9pY2UudnVlPzE0MWMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFnVEE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBREEsS0FEQTtBQUlBO0FBQ0E7QUFEQTtBQUpBO0FBREE7O0FBV0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0Esd0JBREE7QUFFQTtBQUNBO0FBQ0Esb0JBREE7QUFFQSxtQkFGQTtBQUdBLGtCQUhBO0FBSUEsYUFKQTtBQUtBLHFCQUxBO0FBTUEsa0JBTkE7QUFPQSx3QkFQQTtBQVFBLGtCQVJBO0FBU0EsaUJBVEE7QUFVQSxhQVZBO0FBV0Esb0JBWEE7QUFZQSxhQVpBO0FBYUEsc0JBYkE7QUFjQSxtQkFkQTtBQWVBLGtCQWZBO0FBZ0JBLHdCQWhCQTtBQWlCQSw4QkFqQkE7QUFrQkEsdUJBbEJBO0FBbUJBLHVCQW5CQTtBQW9CQSxnQ0FwQkE7QUFxQkEsZ0JBckJBO0FBc0JBLGVBdEJBO0FBdUJBLG1CQXZCQTtBQXdCQSx3QkF4QkE7QUF5QkEsa0JBekJBO0FBMEJBLHdCQTFCQTtBQTJCQSx3QkEzQkE7QUE0QkEsa0JBNUJBO0FBNkJBOztBQTdCQTtBQWtDQSxHQXJDQTs7QUF1Q0E7O0FBRUE7QUFGQSxHQXZDQTs7QUE0Q0EsV0E1Q0E7O0FBbURBOztBQUdBLGtHQUNBLElBREEsQ0FDQTtBQUNBO0FBQ0E7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BTEE7QUFNQSxLQVpBLEVBYUEsS0FiQSxDQWFBO0FBQ0E7QUFDQSxLQWZBOztBQWtCQSx3RkFDQSxJQURBLENBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FKQSxFQUtBLEtBTEEsQ0FLQTtBQUNBO0FBQ0EsS0FQQTs7QUFZQSx1RUFDQSxJQURBLENBQ0E7QUFDQTtBQUVBLEtBSkEsRUFLQSxLQUxBLENBS0E7QUFDQTtBQUNBLEtBUEE7O0FBU0EsaUVBQ0EsSUFEQSxDQUNBO0FBQ0E7QUFFQSxLQUpBLEVBS0EsS0FMQSxDQUtBO0FBQ0E7QUFDQSxLQVBBOztBQVVBLHNFQUNBLElBREEsQ0FDQTtBQUNBO0FBRUEsS0FKQSxFQUtBLEtBTEEsQ0FLQTtBQUNBO0FBQ0EsS0FQQTtBQVNBLEdBaEhBOztBQWtIQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUxBO0FBTUEsS0FUQTs7QUFXQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLE9BTkE7QUFTQSxLQXRCQTs7QUF3QkE7O0FBRUE7QUFFQSxLQTVCQTs7QUE4QkE7QUFDQTs7QUFFQTtBQUVBLEtBbkNBOztBQXFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUEsbUNBRkE7QUFHQSxpQ0FIQTtBQUlBLDJCQUpBO0FBS0EseUNBTEE7QUFNQSwrQkFOQTtBQU9BLDJCQVBBOztBQVVBLCtCQVZBO0FBV0EscUNBWEE7QUFZQSxxQ0FaQTtBQWFBLHlDQWJBO0FBY0EsMkJBZEE7QUFlQSwrQkFmQTtBQWdCQSx5Q0FoQkE7QUFpQkEsMEJBakJBO0FBa0JBOztBQWxCQTs7QUF1QkEsa0ZBQ0EsSUFEQSxDQUNBO0FBQ0E7QUFDQTtBQUNBLE9BSkEsRUFLQSxLQUxBLENBS0E7QUFDQTtBQUNBLE9BUEE7QUFTQSxLQTlFQTs7QUFrRkE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQXRGQTs7QUF3RkE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUZBO0FBR0E7QUFDQSxLQTlGQTs7QUFnR0E7QUFDQTtBQUNBO0FBQ0EsS0FuR0E7O0FBcUdBO0FBQ0E7QUFDQSxLQXZHQTs7QUF5R0E7QUFDQTtBQUNBO0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQXJIQTtBQWxIQSIsImZpbGUiOiI2Ny5qcyIsInNvdXJjZXNDb250ZW50IjpbIjx0ZW1wbGF0ZT5cblxuPHNlY3Rpb24+XG4gIDxkaXYgY2xhc3M9XCJjb2x1bW5zXCIgc3R5bGU9XCJtYXJnaW4tbGVmdDotMi43cmVtO3BhZGRpbmctdG9wOiAxM3B4O21hcmdpbi1ib3R0b206IDEzcHg7XCI+XG48ZGl2IGNsYXNzPVwidG9vbGJhclwiPlxuXG4gICAgIDxkaXYgY2xhc3M9XCJ0b29sX3N0cmlwXCI+XG4gICAgICAgICA8aDIgY2xhc3M9XCJ0aXRsZSBpcy02XCI+IENyZWF0ZSBJbnZvaWNlIDwvaDI+XG4gICAgIDwvZGl2PlxuXG4gICAgIFxuICAgICBcbiAgICAgPGRpdj5cbiAgICAgICAgPGEgY2xhc3M9XCJidXR0b24gaXMtcHJpbWFyeSBpcy1zbWFsbFwiIEBjbGljaz1cImNyZWF0ZV9uZXdcIj5TYXZlPC9hPlxuICAgICAgICA8cm91dGVyLWxpbmsgY2xhc3M9XCJidXR0b24gaXMtcHJpbWFyeSBpcy1zbWFsbFwiIDp0bz1cIicvcHVyY2hhc2VvcmRlcnMvY3JlYXRlJ1wiID5DcmVhdGUgTmV3PC9yb3V0ZXItbGluaz5cbiAgICAgICAgXG4gICAgIDwvZGl2PlxuICAgICBcbjwvZGl2PlxuXG48L2Rpdj5cblxuICA8ZGl2IGNsYXNzPVwiY29sdW1uc1wiIHN0eWxlPVwiYmFja2dyb3VuZC1jb2xvcjojZmZmZmZmXCI+XG4gXG5cbiAgPGRpdiBjbGFzcz1cImNvbHVtbiBpcy0xMlwiIHN0eWxlPVwibWFyZ2luLWxlZnQ6LTIuN3JlbTsgYmFja2dyb3VuZC1jb2xvcjojZmZmZmZmO3BhZGRpbmctdG9wOiAxM3B4O3BhZGRpbmctbGVmdDogMS41cmVtO1wiPlxuXG5cbiAgICA8ZGl2IGNsYXNzPVwiY29sdW1uc1wiIHN0eWxlPVwibWFyZ2luLWJvdHRvbTowcHhcIj5cbiAgICBcbiAgICAgIDxkaXYgY2xhc3M9XCJjb2x1bW4gaXMtM1wiPlxuICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZmllbGRcIj5cbiAgICAgICAgICAgICAgICA8bGFiZWwgY2xhc3M9XCJsYWJlbCBpcy1maWVsZC10aXRsZVwiPkludm9pY2UgIzwvbGFiZWw+XG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNvbnRyb2xcIj5cbiAgICAgICAgICAgICAgICAgIDxpbnB1dCBjbGFzcz1cImlucHV0ICBpcy1zbWFsbFwiIHYtdmFsaWRhdGU9XCIncmVxdWlyZWQnXCIgbmFtZT1cImludm51bWJlclwiIHR5cGU9XCJ0ZXh0XCIgdi1tb2RlbD1cImludm51bWJlclwiID5cbiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPVwiZXJyb3JcIj57eyBlcnJvcnMuZmlyc3QoJ2ludm51bWJlcicpIH19PC9zcGFuPlxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICA8L2Rpdj5cblxuICAgICAgPC9kaXY+XG5cblxuICAgICA8ZGl2IGNsYXNzPVwiY29sdW1uIGlzLTNcIj5cbiAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImZpZWxkXCI+XG4gICAgICAgICAgICAgICAgPGxhYmVsIGNsYXNzPVwibGFiZWwgaXMtZmllbGQtdGl0bGVcIj5TYWxlcyBPcmRlciAjPC9sYWJlbD5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiY29udHJvbFwiPlxuICAgICAgICAgICAgICAgICAgPGlucHV0IGNsYXNzPVwiaW5wdXQgIGlzLXNtYWxsXCIgdi12YWxpZGF0ZT1cIidyZXF1aXJlZCdcIiBuYW1lPVwic29udW1iZXJcIiB0eXBlPVwidGV4dFwiIHYtbW9kZWw9XCJzYWxlc29yZGVyLnNvbnVtYmVyXCIgPlxuICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9XCJlcnJvclwiPnt7IGVycm9ycy5maXJzdCgnc29udW1iZXInKSB9fTwvc3Bhbj5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgPC9kaXY+XG5cbiAgICAgIDwvZGl2PlxuICAgICAgXG5cblxuICAgIDwvZGl2PlxuXG5cblxuICAgIDxkaXYgY2xhc3M9XCJjb2x1bW5zXCIgc3R5bGU9XCJtYXJnaW4tYm90dG9tOjBweFwiPlxuICAgIFxuICAgIFxuXG4gICAgICA8ZGl2IGNsYXNzPVwiY29sdW1uIGlzLTNcIj5cbiAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImZpZWxkXCI+XG4gICAgICAgICAgICAgICAgPGxhYmVsIGNsYXNzPVwibGFiZWwgaXMtZmllbGQtdGl0bGVcIj5DcmVhdGVkIERhdGU8L2xhYmVsPlxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjb250cm9sXCI+XG4gICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICA8ZGF0ZXBpY2tlciA6Zm9ybWF0PVwiJ3l5eXktTU0tZGQnXCIgOmlucHV0LWNsYXNzPVwiJ2lucHV0IGlzLXNtYWxsJ1wiIHYtdmFsaWRhdGU9XCIncmVxdWlyZWQnXCIgbmFtZT1cImNyZWF0ZWRfZGF0ZVwiIHYtbW9kZWw9XCJjcmVhdGVkX2RhdGVcIj48L2RhdGVwaWNrZXI+XG4gICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPVwiZXJyb3JcIj57eyBlcnJvcnMuZmlyc3QoJ2NyZWF0ZWRfZGF0ZScpIH19PC9zcGFuPlxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICA8L2Rpdj5cblxuICAgICAgPC9kaXY+XG5cbiAgICAgIDxkaXYgY2xhc3M9XCJjb2x1bW4gaXMtM1wiPlxuICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZmllbGRcIj5cbiAgICAgICAgICAgICAgICA8bGFiZWwgY2xhc3M9XCJsYWJlbCBpcy1maWVsZC10aXRsZVwiPlN0YXR1czwvbGFiZWw+XG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInNlbGVjdCBpcy1zbWFsbFwiPlxuICAgICAgICAgICAgICAgICAgIDxzZWxlY3Qgdi1tb2RlbD1cInN0YXR1c1wiID5cbiAgICAgICAgICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPVwiQ3JlYXRlZFwiID5DcmVhdGVkPC9vcHRpb24+XG4gICAgICAgICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT1cIlNlbnRcIiA+U2VudDwvb3B0aW9uPlxuICAgICAgICAgICAgICAgICAgICA8L3NlbGVjdD4gXG4gICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIFxuXG4gICAgICA8L2Rpdj5cblxuXG5cbiAgICAgPGRpdiBjbGFzcz1cImNvbHVtbiBpcy0zXCI+XG5cbiAgICAgICAgPGRpdiBjbGFzcz1cImZpZWxkXCI+XG4gICAgICAgICAgICAgICAgPGxhYmVsIGNsYXNzPVwibGFiZWwgaXMtZmllbGQtdGl0bGVcIj5EdWUgRGF0ZTwvbGFiZWw+XG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNvbnRyb2xcIj5cbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgPGRhdGVwaWNrZXIgICBuYW1lPVwiZHVlX2RhdGVcIiB2LW1vZGVsPVwiZHVlX2RhdGVcIiA6Zm9ybWF0PVwiJ3l5eXktTU0tZGQnXCIgOmlucHV0LWNsYXNzPVwiJ2lucHV0IGlzLXNtYWxsJ1wiPjwvZGF0ZXBpY2tlcj5cbiAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9XCJlcnJvclwiIHYtaWY9XCJkdWVfZGF0ZV9lcnJvclwiPlBsZWFzZSBlbnRlciBkdWUgZGF0ZTwvc3Bhbj5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgPC9kaXY+XG5cbiAgICAgIDwvZGl2PlxuXG5cblxuXG4gICAgICA8ZGl2IGNsYXNzPVwiY29sdW1uIGlzLTNcIj5cbiAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImZpZWxkXCI+XG4gICAgICAgICAgICAgICAgPGxhYmVsIGNsYXNzPVwibGFiZWwgaXMtZmllbGQtdGl0bGVcIj5FeHBlY3RlZCBTaGlwbWVudCBEYXRlPC9sYWJlbD5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiY29udHJvbFwiPlxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICA8ZGF0ZXBpY2tlciBAc2VsZWN0ZWQ9XCJjaGFuZ2Vfc2hpcG1lbnRfZGF0ZVwiICBuYW1lPVwic2hpcG1lbnRfZGF0ZVwiIHYtbW9kZWw9XCJzYWxlc29yZGVyLnNoaXBtZW50X2RhdGVcIiA6Zm9ybWF0PVwiJ2RkIE1NTSB5eXl5J1wiIDppbnB1dC1jbGFzcz1cIidpbnB1dCBpcy1zbWFsbCdcIj48L2RhdGVwaWNrZXI+XG4gICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPVwiZXJyb3JcIiB2LWlmPVwic2hpcG1lbnRfZGF0ZV9lcnJvclwiPlBsZWFzZSBlbnRlciBzaGlwbWVudCBkYXRlPC9zcGFuPlxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICA8L2Rpdj5cblxuICAgICAgPC9kaXY+XG5cbiAgICAgIFxuXG4gICAgPC9kaXY+XG5cblxuXG5cblxuXG4gICAgPGRpdiBjbGFzcz1cImNvbHVtbnNcIiBzdHlsZT1cIm1hcmdpbi1ib3R0b206MHB4XCI+XG4gICAgXG4gICAgICA8ZGl2IGNsYXNzPVwiY29sdW1uIGlzLTNcIj5cbiAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImZpZWxkXCI+XG4gICAgICAgICAgICAgICAgPGxhYmVsIGNsYXNzPVwibGFiZWwgaXMtZmllbGQtdGl0bGVcIj5DdXN0b21lcjwvbGFiZWw+XG4gICAgICAgICAgICAgIFxuXG4gICAgICAgICAgICAgIDxsYWJlbCBjbGFzcz1cImxhYmVsXCI+e3tzYWxlc29yZGVyLmN1c3RvbWVyLmZpcnN0bmFtZSB9fSAge3tzYWxlc29yZGVyLmN1c3RvbWVyLmxhc3RuYW1lIH19PC9sYWJlbD5cblxuICAgICAgICAgICAgICAgPGxhYmVsIGNsYXNzPVwibGFiZWxcIj5QaG9uZTogICB7e3NhbGVzb3JkZXIuY3VzdG9tZXIucGhvbmUgfX08L2xhYmVsPlxuXG4gICAgICAgICAgICAgIDwvZGl2PlxuXG4gICAgICAgICAgICAgIFxuXG4gICAgICA8L2Rpdj5cbiAgICA8L2Rpdj5cblxuICAgIDxkaXYgY2xhc3M9XCJjb2x1bW5zXCIgc3R5bGU9XCJtYXJnaW4tYm90dG9tOjBweFwiPlxuICAgIFxuICAgICAgPGRpdiBjbGFzcz1cImNvbHVtbiBpcy0zXCI+XG4gICAgICAgICA8bGFiZWwgY2xhc3M9XCJsYWJlbCBpcy1maWVsZC10aXRsZVwiPkJpbGxpbmcgQWRkcmVzczwvbGFiZWw+XG4gICAgICAgICAgICAgIDxkaXY+IDxsYWJlbD4ge3tzYWxlc29yZGVyLmN1c3RvbWVyLmJpbGxfYWRkcmVzc319IDwvbGFiZWw+IDwvZGl2PlxuICAgICAgICAgICAgICA8ZGl2PiA8bGFiZWw+IHt7c2FsZXNvcmRlci5jdXN0b21lci5iaWxsX2NpdHl9fSAgPC9sYWJlbD4gPC9kaXY+XG4gICAgICAgICAgICAgIDxkaXY+IDxsYWJlbD57e3NhbGVzb3JkZXIuY3VzdG9tZXIuYmlsbF9zdGF0ZX19IHt7c2FsZXNvcmRlci5jdXN0b21lci5iaWxsX3ppcH19ICA8L2xhYmVsPiA8L2Rpdj5cbiAgICAgICAgICAgICAgPGRpdj4gPGxhYmVsPiB7e3NhbGVzb3JkZXIuY3VzdG9tZXIuYmlsbF9jb3VudHJ5fX0gPC9sYWJlbD4gPC9kaXY+XG5cbiAgICAgIDwvZGl2PlxuICAgICAgICBcbiAgICAgIDxkaXYgY2xhc3M9XCJjb2x1bW4gaXMtM1wiPlxuICAgICAgICAgIDxsYWJlbCBjbGFzcz1cImxhYmVsIGlzLWZpZWxkLXRpdGxlXCI+U2hpcHBpbmcgQWRkcmVzczwvbGFiZWw+XG4gICAgICAgICAgICAgICA8ZGl2PiA8bGFiZWw+IHt7c2FsZXNvcmRlci5jdXN0b21lci5zaGlwX2FkZHJlc3N9fSA8L2xhYmVsPiA8L2Rpdj5cbiAgICAgICAgICAgICAgIDxkaXY+IDxsYWJlbD4ge3tzYWxlc29yZGVyLmN1c3RvbWVyLnNoaXBfY2l0eX19ICA8L2xhYmVsPiA8L2Rpdj5cbiAgICAgICAgICAgICAgIDxkaXY+IDxsYWJlbD57e3NhbGVzb3JkZXIuY3VzdG9tZXIuc2hpcF9zdGF0ZX19IHt7c2FsZXNvcmRlci5jdXN0b21lci5zaGlwX3ppcH19ICA8L2xhYmVsPiA8L2Rpdj5cbiAgICAgICAgICAgICAgIDxkaXY+IDxsYWJlbD4ge3tzYWxlc29yZGVyLmN1c3RvbWVyLnNoaXBfY291bnRyeX19IDwvbGFiZWw+IDwvZGl2PlxuICAgICAgPC9kaXY+XG5cbiAgICA8L2Rpdj5cblxuXG4gICAgIFxuXG4gICAgIFxuXG4gICBcbiAgICAgIDx0YWJsZSBjbGFzcz1cInRhYmxlIGlzLWZ1bGx3aWR0aCBpcy1ib3JkZXJlZFwiIGlkPVwiZ3JpZF90YWJsZVwiPlxuICAgICAgIDx0aGVhZD5cbiAgICAgICA8dHI+XG4gICAgICAgIDx0aD4gUHJvZHVjdCBOYW1lIDwvdGg+XG4gICAgICAgIDx0aD4gT3JkZXJlZCBRdHkgPC90aD5cbiAgICAgICAgPHRoPiBJbnZvaWNlZCBRdHkgIDwvdGg+XG5cbiAgICAgICAgPHRoPiBVbml0IFByaWNlPC90aD5cbiAgICAgICAgPHRoIHN0eWxlPVwiYmFja2dyb3VuZC1jb2xvcjojY2FjZWQwXCI+IFJlY2VpdmVkIFF0eTwvdGg+XG4gICAgICAgXG4gICAgICAgIDx0aD4gQW1vdW50PC90aD5cbiAgICAgICAgPHRoPiA8L3RoPlxuXG4gICAgICAgPC90cj5cblxuICAgICAgIDwvdGhlYWQ+XG5cblxuICAgICAgICAgPHRib2R5PlxuXG4gICAgICAgICAgPHRyIHYtZm9yPVwiKHByb2R1Y3QsIGluZGV4KSBpbiBwcm9kdWN0X2dyaWRcIj5cblxuICAgICAgICAgICAgPHRkPnt7cHJvZHVjdC5uYW1lfX0gPC90ZD5cbiAgICAgICAgICAgIDx0ZD57e3Byb2R1Y3QucXR5fX0gIDwvdGQ+XG4gICAgICAgICAgICA8dGQ+e3twcm9kdWN0Lmludm9pY2VkX3F0eX19IDwvdGQ+XG4gICAgICAgICAgICA8dGQ+e3twcm9kdWN0LnVuaXRfcHJpY2V9fSA8L3RkPlxuICAgICAgICAgICAgPHRkICBzdHlsZT1cImJhY2tncm91bmQtY29sb3I6I2NhY2VkMFwiPjxpbnB1dCBzdHlsZT1cImJvcmRlci1yYWRpdXM6MHB4XCIgY2xhc3M9XCJpbnB1dCBpcy1zbWFsbFwiICAgdi1tb2RlbD0ncHJvZHVjdF9ncmlkW2luZGV4XS5xdHluZXcnICAgLz4gPC90ZD5cbiAgICAgICAgICAgIDx0ZD4ge3socHJvZHVjdF9ncmlkW2luZGV4XS51bml0X3ByaWNlKnByb2R1Y3RfZ3JpZFtpbmRleF0ucXR5bmV3KS50b0ZpeGVkKDIpfX08L3RkPlxuICAgICAgICAgICAgPHRkPiA8YSBocmVmPVwiamF2YXNjcmlwdDp2b2lkKDApXCIgQGNsaWNrPVwiZGVsZXRlX3Jvd1wiID4gPGkgOmlkPVwiaW5kZXhcIiBjbGFzcz1cImZhciBmYS10cmFzaC1hbHRcIj48L2k+IDwvYT4gPC90ZD5cbiAgICAgICAgICAgXG5cbiAgICAgICAgICA8L3RyPlxuXG4gICAgICBcblxuICAgICAgICAgIDx0ciBzdHlsZT1cImJvcmRlci1ib3R0b20td2lkdGg6MFwiPlxuICAgICAgICAgICAgPHRkIHN0eWxlPVwiYm9yZGVyOm5vbmVcIj4gPC90ZD5cbiAgICAgICAgICAgIDx0ZCBzdHlsZT1cImJvcmRlcjpub25lXCI+IDwvdGQ+XG4gICAgICAgICAgICA8dGQgc3R5bGU9XCJib3JkZXI6bm9uZVwiPiA8L3RkPlxuICAgICAgICAgICAgPHRkIHN0eWxlPVwiYm9yZGVyOm5vbmVcIj4gPC90ZD5cbiAgICAgICAgICAgIDx0ZCBzdHlsZT1cImJvcmRlcjpub25lO1wiIGNsYXNzPVwibGFiZWwgaXMtZmllbGQtdGl0bGVcIj5TdWIgVG90YWwgPC90ZD5cbiAgICAgICAgICAgIDx0ZCBzdHlsZT1cImJvcmRlcjpub25lOyB0ZXh0LWFsaWduOiByaWdodDtcIj57e3N1Yl90b3RhbCgpLnRvRml4ZWQoMil9fSA8L3RkPlxuICAgICAgICAgIDwvdHI+XG5cbiAgICAgICAgICA8dHIgc3R5bGU9XCJib3JkZXItYm90dG9tLXdpZHRoOjBcIj5cbiAgICAgICAgICAgIDx0ZCBzdHlsZT1cImJvcmRlcjpub25lXCI+IDwvdGQ+XG4gICAgICAgICAgICA8dGQgc3R5bGU9XCJib3JkZXI6bm9uZVwiPiA8L3RkPlxuICAgICAgICAgICAgPHRkIHN0eWxlPVwiYm9yZGVyOm5vbmVcIj4gPC90ZD5cbiAgICAgICAgICAgIDx0ZCBzdHlsZT1cImJvcmRlcjpub25lXCI+IDwvdGQ+XG4gICAgICAgICAgICA8dGQgc3R5bGU9XCJib3JkZXI6bm9uZVwiIGNsYXNzPVwibGFiZWwgaXMtZmllbGQtdGl0bGVcIj5cbiAgICAgICAgICAgICAgICA8ZGl2IHN0eWxlPVwiZGlzcGxheTpmbGV4O2p1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlblwiPlxuICAgICAgICAgICAgICAgICAgPGRpdj5BcHBseSBUYXggPC9kaXY+ICBcbiAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJzZWxlY3QgaXMtc21hbGxcIj5cbiAgICAgICAgICAgICAgICAgICAgPHNlbGVjdCB2LW1vZGVsPVwic2FsZXNvcmRlci50YXhfaWRcIiBAY2hhbmdlPVwiY2hhbmdlX3RheFwiPlxuICAgICAgICAgICAgICAgICAgICAgIDxvcHRpb24gdi1mb3I9XCIodGF4LGluZGV4KSBpbiB0YXhlc1wiIDp2YWx1ZT1cInRheC5pZFwiICA+e3t0YXgudGF4X2NvZGUgfX0gKHt7dGF4LnRheF9wZXJjZW50YWdlIH19JSk8L29wdGlvbj5cbiAgICAgICAgICAgICAgICAgICAgPC9zZWxlY3Q+IFxuICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICA8L3RkPlxuICAgICAgICAgICAgPHRkIHN0eWxlPVwiYm9yZGVyOm5vbmU7dGV4dC1hbGlnbjogcmlnaHQ7XCI+e3tOdW1iZXIoY2FjdWxhdGVfdGF4KCkpLnRvRml4ZWQoMil9fSA8L3RkPlxuICAgICAgICAgIDwvdHI+XG5cbiAgICAgICAgICAgPHRyIHN0eWxlPVwiYm9yZGVyLWJvdHRvbS13aWR0aDowXCI+XG4gICAgICAgICAgICA8dGQgc3R5bGU9XCJib3JkZXI6bm9uZVwiPiA8L3RkPlxuICAgICAgICAgICAgPHRkIHN0eWxlPVwiYm9yZGVyOm5vbmVcIj4gPC90ZD5cbiAgICAgICAgICAgIDx0ZCBzdHlsZT1cImJvcmRlcjpub25lXCI+IDwvdGQ+XG4gICAgICAgICAgICA8dGQgc3R5bGU9XCJib3JkZXI6bm9uZVwiPiA8L3RkPlxuICAgICAgICAgICAgPHRkIHN0eWxlPVwiYm9yZGVyOm5vbmVcIiBjbGFzcz1cImxhYmVsIGlzLWZpZWxkLXRpdGxlXCI+XG5cblxuICAgICAgICAgICAgICA8ZGl2IHN0eWxlPVwiZGlzcGxheTpmbGV4O2p1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlblwiPlxuICAgICAgICAgICAgICA8ZGl2PkRpc2NvdW50IDwvZGl2PlxuXG4gICAgICAgICAgICAgIFxuICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZmllbGQgaGFzLWFkZG9uc1wiPlxuXG4gICAgICAgICAgICAgICAgPHAgY2xhc3M9XCJjb250cm9sXCI+XG4gICAgICAgICAgICAgICAgICA8aW5wdXQgc3R5bGU9XCJib3JkZXItY29sb3I6I2RiZGJkYjt3aWR0aDoxMDBweFwiIGNsYXNzPVwiaW5wdXQgaXMtc21hbGxcIiB0eXBlPVwidGV4dFwiIHYtbW9kZWw9XCJzYWxlc29yZGVyLmRpc2NvdW50XCIgPlxuICAgICAgICAgICAgICAgIDwvcD5cbiAgICAgICAgICAgICAgICA8cCBjbGFzcz1cImNvbnRyb2xcIj5cbiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPVwic2VsZWN0IGlzLXNtYWxsXCIgQGNoYW5nZT1cImNoYW5nZV9kaXNjb3VudF90eXBlXCI+XG4gICAgICAgICAgICAgICAgICAgIDxzZWxlY3Qgdi1tb2RlbD1cInNhbGVzb3JkZXIuZGlzY291bnRfdHlwZVwiPlxuICAgICAgICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9XCJkXCI+JDwvb3B0aW9uPlxuICAgICAgICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9XCJwXCI+JTwvb3B0aW9uPlxuICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIDwvc2VsZWN0PlxuICAgICAgICAgICAgICAgICAgPC9zcGFuPlxuICAgICAgICAgICAgICAgIDwvcD5cbiAgICAgICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgICAgIDwvZGl2PlxuXG5cblxuXG4gICAgICAgICAgICAgPC90ZD5cbiAgICAgICAgICAgIDx0ZCBzdHlsZT1cImJvcmRlcjpub25lO3RleHQtYWxpZ246IHJpZ2h0O1wiPih7e051bWJlcihjYWN1bGF0ZV9kaXNjb3VudCgpKS50b0ZpeGVkKDIpfX0pPC90ZD5cbiAgICAgICAgICA8L3RyPlxuXG5cbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgPHRyIHN0eWxlPVwiYm9yZGVyOm5vbmVcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBzdHlsZT1cImJvcmRlcjpub25lXCI+IDwvdGQ+XG4gICAgICAgICAgICAgICAgICAgICAgICA8dGQgc3R5bGU9XCJib3JkZXI6bm9uZVwiPiA8L3RkPlxuICAgICAgICAgICAgICAgICAgICAgICAgPHRkIHN0eWxlPVwiYm9yZGVyOm5vbmVcIj4gPC90ZD5cbiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBzdHlsZT1cImJvcmRlcjpub25lXCI+IDwvdGQ+XG4gICAgICAgICAgICAgICAgICAgICAgICA8dGQgc3R5bGU9XCJib3JkZXI6bm9uZTtiYWNrZ3JvdW5kLWNvbG9yOiBhbnRpcXVld2hpdGU7XCIgY2xhc3M9XCJ0aXRsZSBpcy02XCI+VG90YWw8L3RkPlxuICAgICAgICAgICAgICAgICAgICAgICAgPHRkICBjbGFzcz1cInRpdGxlIGlzLTZcIiBzdHlsZT1cImJvcmRlcjpub25lO2JhY2tncm91bmQtY29sb3I6IGFudGlxdWV3aGl0ZTt0ZXh0LWFsaWduOiByaWdodDtcIj57e3RvdGFsKCkudG9GaXhlZCgyKX19PC90ZD5cblxuICAgICAgICAgICAgICAgICA8L3RyPlxuXG4gICAgICAgICAgICAgICAgXG4gICAgICAgICA8L3Rib2R5PlxuXG4gICAgICA8L3RhYmxlPlxuICA8L2Rpdj5cblxuIFxuICAgIFxuXG5cbiA8L2Rpdj5cblxuIFxuPC9zZWN0aW9uPiAgXG5cbjwvdGVtcGxhdGU+XG5cblxuPHNjcmlwdD5cbmltcG9ydCBheGlvcyBmcm9tICdheGlvcydcbmltcG9ydCBEYXRlcGlja2VyIGZyb20gJ3Z1ZWpzLWRhdGVwaWNrZXInO1xuaW1wb3J0IHsgVmFsaWRhdG9yIH0gZnJvbSAndmVlLXZhbGlkYXRlJztcblxuY29uc3QgZGljdCA9IHtcbiAgY3VzdG9tOiB7XG4gICAgc29udW1iZXI6IHtcbiAgICAgIHJlcXVpcmVkOiAnT3JkZXIjIGlzIGVtcHR5J1xuICAgIH0sXG4gICAgbmFtZToge1xuICAgICAgcmVxdWlyZWQ6ICgpID0+ICdZb3VyIG5hbWUgaXMgZW1wdHknXG4gICAgfVxuICB9XG59O1xuXG5WYWxpZGF0b3IubG9jYWxpemUoJ2VuJywgZGljdCk7XG5cbmZ1bmN0aW9uIHRlc3QoKXtcbiAgYWxlcnQoJ2luc2lkZSB0ZXN0Jylcbn1cblxuIGV4cG9ydCBkZWZhdWx0IHtcbiAgIG5hbWU6XCJwdXJjaGFzZW9yZGVyc1wiLFxuICAgZGF0YSAoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHNhbGVzb3JkZXI6W10sXG4gICAgICBpbnZudW1iZXI6JycsXG4gICAgICBzb251bWJlcjonJyxcbiAgICAgIHF0eTonJywgXG4gICAgICBjdXN0b21lcl9pZDonJyxcbiAgICAgIHByb2R1Y3RzOltdLFxuICAgICAgaXNBZGRBY3RpdmU6ZmFsc2UsXG4gICAgICBwcm9kdWN0czpbXSxcbiAgICAgIGtleXdvcmQ6JycsXG4gICAgICBrZXk6JycsXG4gICAgICB1bml0X3ByaWNlOicnLFxuICAgICAgcXR5OicnLFxuICAgICAgcHJvZHVjdF9ncmlkOltdLFxuICAgICAgY3VzdG9tZXJzOltdLFxuICAgICAgY3VzdG9tZXI6JycsXG4gICAgICB0YXhfcGVyY2VudGFnZTonJyxcbiAgICAgIGNyZWF0ZWRfZGF0ZTpuZXcgRGF0ZSgpLFxuICAgICAgc3RhdHVzOidDcmVhdGVkJyxcbiAgICAgIHNoaXBtZW50X2RhdGU6JycsXG4gICAgICBzaGlwbWVudF9kYXRlX2Vycm9yOmZhbHNlLFxuICAgICAgdGF4X2lkOicnLFxuICAgICAgdGF4ZXM6W10sXG4gICAgICB0b3RhbF90YXg6JycsXG4gICAgICB0YXhfcGVyY2VudGFnZTonJyxcbiAgICAgIGRpc2NvdW50OicnLFxuICAgICAgZGlzY291bnRfdHlwZTonZCcsXG4gICAgICBkaXNjb3VudF90b3RhbDonJyxcbiAgICAgIGR1ZV9kYXRlOicnLFxuICAgICAgZHVlX2RhdGVfZXJyb3I6ZmFsc2VcblxuXG5cbiAgICB9XG4gIH0sXG5cbiAgY29tcG9uZW50czp7XG4gICAgIFxuICAgICAgRGF0ZXBpY2tlclxuICB9LFxuXG4gIHdhdGNoOiB7XG5cbiAgICBcbiAgfSxcblxuICBcblxubW91bnRlZCAoKSB7XG5cbiAgIFxuICAgIGF4aW9zLmdldCgnYXBpL3NhbGVzb3JkZXJzLycrdGhpcy4kcm91dGUucGFyYW1zLmlkKVxuICAgICAgLnRoZW4ocmVzcG9uc2UgPT4ge1xuICAgICAgICB0aGlzLnNhbGVzb3JkZXIgPSAgcmVzcG9uc2UuZGF0YS5kYXRhXG4gICAgICAgIGNvbnNvbGUubG9nKHRoaXMuJHJvdXRlLnBhcmFtcy5pZCk7XG4gICAgICAgIFxuXG4gICAgICAgIHRoaXMuc2FsZXNvcmRlci5wcm9kdWN0cy5mb3JFYWNoKChyb3csIGkpPT4ge1xuICAgICAgICAgICAvL3Jvdy5xdHluZXc9MVxuICAgICAgICAgICAvL3Jvdy5xdHk9IEpTT04ucGFyc2UoSlNPTi5zdHJpbmdpZnkocm93LnF0eW5ldykpO1xuICAgICAgICAgICAgVnVlLnNldChyb3csICdxdHluZXcnLCByb3cucXR5KTtcbiAgICAgICAgICAgdGhpcy5wcm9kdWN0X2dyaWQucHVzaChyb3cpXG4gICAgICAgIH0pXG4gICAgICB9KVxuICAgICAgLmNhdGNoKGVycm9yID0+IHtcbiAgICAgICAgY29uc29sZS5sb2coZXJyb3IpO1xuICAgIH0pO1xuXG5cbiAgICBheGlvcy5nZXQoJ2FwaS9pbnZvaWNlcy9nZXQvbmV4dGludm51bWJlcicpXG4gICAgLnRoZW4ocmVzcG9uc2UgPT4ge1xuICAgICAgdGhpcy5pbnZudW1iZXIgPSAgcmVzcG9uc2UuZGF0YVxuICAgICAgY29uc29sZS5sb2cocmVzcG9uc2UpO1xuICAgIH0pXG4gICAgLmNhdGNoKGZ1bmN0aW9uIChlcnJvcikge1xuICAgICAgY29uc29sZS5sb2coZXJyb3IpO1xuICAgIH0pO1xuXG5cbiAgICBcblxuICAgIGF4aW9zLmdldCgnYXBpL2N1c3RvbWVycycpXG4gICAgICAudGhlbihyZXNwb25zZSA9PiB7XG4gICAgICAgIHRoaXMuY3VzdG9tZXJzID0gIHJlc3BvbnNlLmRhdGEuZGF0YVxuICAgICAgICBcbiAgICAgIH0pXG4gICAgICAuY2F0Y2goZXJyb3IgPT4ge1xuICAgICAgICBjb25zb2xlLmxvZyhlcnJvcik7XG4gICAgfSk7XG5cbiAgICBheGlvcy5nZXQoJ2FwaS90YXgnKVxuICAgICAgLnRoZW4ocmVzcG9uc2UgPT4ge1xuICAgICAgICB0aGlzLnRheGVzID0gIHJlc3BvbnNlLmRhdGEuZGF0YVxuICAgICAgICBcbiAgICAgIH0pXG4gICAgICAuY2F0Y2goZXJyb3IgPT4ge1xuICAgICAgICBjb25zb2xlLmxvZyhlcnJvcik7XG4gICAgfSk7XG5cblxuICAgIGF4aW9zLmdldCgnYXBpL3Byb2R1Y3RzJylcbiAgICAgIC50aGVuKHJlc3BvbnNlID0+IHtcbiAgICAgICAgdGhpcy5wcm9kdWN0c3BybyA9ICByZXNwb25zZS5kYXRhLmRhdGFcbiAgICAgICAgXG4gICAgICB9KVxuICAgICAgLmNhdGNoKGVycm9yID0+IHtcbiAgICAgICAgY29uc29sZS5sb2coZXJyb3IpO1xuICAgIH0pO1xuXG59LFxuXG4gIG1ldGhvZHM6e1xuXG4gICAgY2hhbmdlX2N1c3RvbWVyOmZ1bmN0aW9uKCl7XG4gICAgIHRoaXMuY3VzdG9tZXJzLmZvckVhY2goKHJvdywgaSk9PiB7XG4gICAgICAgICBpZih0aGlzLmN1c3RvbWVyX2lkPT1yb3cuaWQpe1xuICAgICAgICAgdGhpcy5jdXN0b21lcj1yb3dcbiAgICAgICAgICByZXR1cm5cbiAgICAgICAgIH1cbiAgICAgIH0pXG4gICAgfSxcblxuICAgIGNoYW5nZV90YXg6ZnVuY3Rpb24oKXtcblxuICAgICAgICB0aGlzLnRheGVzLmZvckVhY2goKHJvdywgaSk9PiB7XG4gICAgICAgICBpZih0aGlzLnNhbGVzb3JkZXIudGF4X2lkPT1yb3cuaWQpe1xuICAgICAgICAgIHRoaXMuc2FsZXNvcmRlci50YXhfcGVyY2VudGFnZSA9cm93LnRheF9wZXJjZW50YWdlXG4gICAgICAgICAgIFxuICAgICAgICAgIHJldHVyblxuICAgICAgICAgfVxuICAgICAgfSlcblxuICAgICAgIFxuICAgIH0sXG5cbiAgICBjaGFuZ2VfZGlzY291bnRfdHlwZTpmdW5jdGlvbigpe1xuICAgICAgXG4gICAgICB0aGlzLmNhY3VsYXRlX2Rpc2NvdW50KClcbiAgICAgXG4gICAgfSxcblxuICAgIGNoYW5nZV9zaGlwbWVudF9kYXRlOmZ1bmN0aW9uKCl7XG4gICAgICB0aGlzLnNoaXBtZW50X2RhdGVfZXJyb3I9ZmFsc2VcblxuICAgICAgLy9hbGVydCh0aGlzLnNhbGVzb3JkZXIuc2hpcG1lbnRfZGF0ZSlcblxuICAgIH0sXG5cbiAgICBjcmVhdGVfbmV3OiBmdW5jdGlvbigpe1xuICAgICAgIGxldCBzZWxmID0gdGhpcztcbiAgICAgIC8vYWxlcnQodGhpcy5wdXJjaGFzZV9vcmRlcl9udW1iZXIpO1xuICAgICAgIFxuICAgICAgLy8gaWYodGhpcy5zaGlwbWVudF9kYXRlPT0nJyl7XG4gICAgICAvLyAgICB0aGlzLnNoaXBtZW50X2RhdGVfZXJyb3I9dHJ1ZVxuICAgICAgLy8gIHJldHVybiBcbiAgICAgIC8vIH1cblxuICAgICAgbGV0IHBheWxvYWQgPSB7XG4gICAgICAgICAgXG4gICAgICAgICAgIHByb2R1Y3RzOnRoaXMucHJvZHVjdF9ncmlkLFxuICAgICAgICAgICBpbnZudW1iZXI6dGhpcy5pbnZudW1iZXIsXG4gICAgICAgICAgIHN0YXR1czp0aGlzLnN0YXR1cyxcbiAgICAgICAgICAgc2FsZXNvcmRlcl9pZDp0aGlzLnNhbGVzb3JkZXIuaWQsXG4gICAgICAgICAgIGR1ZV9kYXRlOnRoaXMuZHVlX2RhdGUsXG4gICAgICAgICAgIHRvdGFsOnRoaXMudG90YWwoKSxcblxuXG4gICAgICAgICAgIHNvbnVtYmVyOiB0aGlzLnNvbnVtYmVyLFxuICAgICAgICAgICBjdXN0b21lcl9pZDogICB0aGlzLmN1c3RvbWVyX2lkLFxuICAgICAgICAgICBvcmRlcl9kYXRlOnRoaXMuY3JlYXRlZF9kYXRlLFxuICAgICAgICAgICBzaGlwbWVudF9kYXRlOnRoaXMuc2hpcG1lbnRfZGF0ZSxcbiAgICAgICAgICAgc3RhdHVzOnRoaXMuc3RhdHVzLFxuICAgICAgICAgICBkaXNjb3VudDp0aGlzLmRpc2NvdW50LFxuICAgICAgICAgICBkaXNjb3VudF90eXBlOnRoaXMuZGlzY291bnRfdHlwZSxcbiAgICAgICAgICAgdGF4X3BlcmNlbnRhZ2U6MTAsXG4gICAgICAgICAgIHRheF9jb2RlOidHU1QnXG5cbiAgICAgICB9O1xuXG5cbiAgICAgIGF4aW9zLnBvc3QoJ2FwaS9pbnZvaWNlcycsIHBheWxvYWQpXG4gICAgICAudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHtcbiAgICAgICAgc2VsZi4kcm91dGVyLnB1c2goXCIvaW52b2ljZXNcIilcbiAgICAgICAgY29uc29sZS5sb2cocmVzcG9uc2UpO1xuICAgICAgfSlcbiAgICAgIC5jYXRjaChmdW5jdGlvbiAoZXJyb3IpIHtcbiAgICAgICAgY29uc29sZS5sb2coZXJyb3IpO1xuICAgICAgfSk7XG5cbiAgICB9LFxuXG4gICAgXG4gICAgXG4gICAgZGVsZXRlX3JvdzpmdW5jdGlvbigkZXZlbnQpe1xuICAgICAgY29uc29sZS5sb2coJGV2ZW50LnRhcmdldClcbiAgICAgIC8vYWxlcnQoJGV2ZW50LnRhcmdldC5pZClcbiAgICAgIHRoaXMucHJvZHVjdF9ncmlkLnNwbGljZSgkZXZlbnQudGFyZ2V0LmlkLDEpXG4gICAgfSxcblxuICAgIHN1Yl90b3RhbDpmdW5jdGlvbigpe1xuICAgICAgbGV0IHN1bT0wXG4gICAgICB0aGlzLnByb2R1Y3RfZ3JpZC5mb3JFYWNoKChyb3csIGkpPT4ge1xuICAgICAgICAgIHN1bT1zdW0rIHJvdy51bml0X3ByaWNlKnJvdy5xdHluZXdcbiAgICAgIH0pXG4gICAgICByZXR1cm4gc3VtO1xuICAgIH0sXG5cbiAgICBjYWN1bGF0ZV90YXg6ZnVuY3Rpb24oKXtcbiAgICAgIHRoaXMudG90YWxfdGF4ID0odGhpcy5zdWJfdG90YWwoKSp0aGlzLnNhbGVzb3JkZXIudGF4X3BlcmNlbnRhZ2UvMTAwKS50b0ZpeGVkKDIpIFxuICAgICAgcmV0dXJuIHRoaXMudG90YWxfdGF4O1xuICAgIH0sXG5cbiAgICB0b3RhbDpmdW5jdGlvbigpe1xuICAgICAgICByZXR1cm4gKE51bWJlcih0aGlzLnN1Yl90b3RhbCgpKSArIE51bWJlcih0aGlzLmNhY3VsYXRlX3RheCgpKS1OdW1iZXIodGhpcy5jYWN1bGF0ZV9kaXNjb3VudCgpKSApXG4gICAgfSxcblxuICAgIGNhY3VsYXRlX2Rpc2NvdW50OmZ1bmN0aW9uKCl7XG4gICAgICBpZih0aGlzLnNhbGVzb3JkZXIuZGlzY291bnRfdHlwZT09J2QnKXtcbiAgICAgICAgdGhpcy5kaXNjb3VudF90b3RhbD0gdGhpcy5zYWxlc29yZGVyLmRpc2NvdW50XG4gICAgICAgIFxuICAgICAgfVxuXG4gICAgICBpZih0aGlzLnNhbGVzb3JkZXIuZGlzY291bnRfdHlwZT09J3AnKXtcbiAgICAgICAgdGhpcy5kaXNjb3VudF90b3RhbD0gKCBOdW1iZXIodGhpcy5zdWJfdG90YWwoKSkgKyBOdW1iZXIodGhpcy50b3RhbF90YXgpKSogdGhpcy5zYWxlc29yZGVyLmRpc2NvdW50LzEwMFxuICAgICAgICBjb25zb2xlLmxvZyh0aGlzLnN1Yl90b3RhbCgpKVxuICAgICAgfVxuXG4gICAgICByZXR1cm4gdGhpcy5kaXNjb3VudF90b3RhbFxuICAgIH1cbiAgfVxuIH1cblxuPC9zY3JpcHQ+XG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIHJlc291cmNlcy9hc3NldHMvanMvY29tcG9uZW50cy9zYWxlc29yZGVycy9DcmVhdGVJbnZvaWNlLnZ1ZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///67\n");

/***/ })

})