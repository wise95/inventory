webpackHotUpdate(0,{

/***/ 67:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_axios__ = __webpack_require__(3);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_axios___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_axios__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_vuejs_datepicker__ = __webpack_require__(10);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_vee_validate__ = __webpack_require__(5);\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\n\n\n\nconst dict = {\n  custom: {\n    sonumber: {\n      required: 'Order# is empty'\n    },\n    name: {\n      required: () => 'Your name is empty'\n    }\n  }\n};\n\n__WEBPACK_IMPORTED_MODULE_2_vee_validate__[\"a\" /* Validator */].localize('en', dict);\n\nfunction test() {\n  alert('inside test');\n}\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  name: \"purchaseorders\",\n  data() {\n    return {\n      salesorder: [],\n      invnumber: '',\n      sonumber: '',\n      qty: '',\n      customer_id: '',\n      products: [],\n      isAddActive: false,\n      products: [],\n      keyword: '',\n      key: '',\n      unit_price: '',\n      qty: '',\n      product_grid: [],\n      customers: [],\n      customer: '',\n      tax_percentage: '',\n      created_date: new Date(),\n      status: 'Created',\n      shipment_date: '',\n      shipment_date_error: false,\n      tax_id: '',\n      taxes: [],\n      total_tax: '',\n      tax_percentage: '',\n      discount: '',\n      discount_type: 'd',\n      discount_total: '',\n      due_date: '',\n      due_date_error: false\n\n    };\n  },\n\n  components: {\n\n    Datepicker: __WEBPACK_IMPORTED_MODULE_1_vuejs_datepicker__[\"a\" /* default */]\n  },\n\n  watch: {},\n\n  mounted() {\n\n    __WEBPACK_IMPORTED_MODULE_0_axios___default.a.get('api/salesorders/' + this.$route.params.id).then(response => {\n      this.salesorder = response.data.data;\n      console.log(this.$route.params.id);\n\n      this.salesorder.products.forEach((row, i) => {\n        //row.qtynew=1\n        //row.qty= JSON.parse(JSON.stringify(row.qtynew));\n        Vue.set(row, 'qtynew', row.qty);\n        this.product_grid.push(row);\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n\n    __WEBPACK_IMPORTED_MODULE_0_axios___default.a.get('api/invoices/get/nextinvnumber').then(response => {\n      this.invnumber = response.data;\n      console.log(response);\n    }).catch(function (error) {\n      console.log(error);\n    });\n\n    __WEBPACK_IMPORTED_MODULE_0_axios___default.a.get('api/customers').then(response => {\n      this.customers = response.data.data;\n    }).catch(error => {\n      console.log(error);\n    });\n\n    __WEBPACK_IMPORTED_MODULE_0_axios___default.a.get('api/tax').then(response => {\n      this.taxes = response.data.data;\n    }).catch(error => {\n      console.log(error);\n    });\n\n    __WEBPACK_IMPORTED_MODULE_0_axios___default.a.get('api/products').then(response => {\n      this.productspro = response.data.data;\n    }).catch(error => {\n      console.log(error);\n    });\n  },\n\n  methods: {\n\n    change_customer: function () {\n      this.customers.forEach((row, i) => {\n        if (this.customer_id == row.id) {\n          this.customer = row;\n          return;\n        }\n      });\n    },\n\n    change_tax: function () {\n\n      this.taxes.forEach((row, i) => {\n        if (this.salesorder.tax_id == row.id) {\n          this.salesorder.tax_percentage = row.tax_percentage;\n\n          return;\n        }\n      });\n    },\n\n    change_discount_type: function () {\n\n      this.caculate_discount();\n    },\n\n    change_shipment_date: function () {\n      this.shipment_date_error = false;\n\n      //alert(this.salesorder.shipment_date)\n    },\n\n    create_new: function () {\n      let self = this;\n      //alert(this.purchase_order_number);\n\n      // if(this.shipment_date==''){\n      //    this.shipment_date_error=true\n      //  return \n      // }\n\n      let payload = {\n\n        products: this.product_grid,\n        invnumber: this.invnumber,\n        status: this.status,\n        salesorder_id: this.salesorder.id,\n        due_date: this.due_date,\n        total: this.total(),\n\n        sonumber: this.sonumber,\n        customer_id: this.customer_id,\n        order_date: this.created_date,\n        shipment_date: this.shipment_date,\n        status: this.status,\n        discount: this.discount,\n        discount_type: this.discount_type,\n        tax_percentage: 10,\n        tax_code: 'GST'\n\n      };\n\n      __WEBPACK_IMPORTED_MODULE_0_axios___default.a.post('api/invoices', payload).then(function (response) {\n        self.$router.push(\"/invoices\");\n        console.log(response);\n      }).catch(function (error) {\n        console.log(error);\n      });\n    },\n\n    delete_row: function ($event) {\n      console.log($event.target);\n      //alert($event.target.id)\n      this.product_grid.splice($event.target.id, 1);\n    },\n\n    sub_total: function () {\n      let sum = 0;\n      this.product_grid.forEach((row, i) => {\n        sum = sum + row.unit_price * row.qtynew;\n      });\n      return sum;\n    },\n\n    caculate_tax: function () {\n      this.total_tax = (this.sub_total() * this.salesorder.tax_percentage / 100).toFixed(2);\n      return this.total_tax;\n    },\n\n    total: function () {\n      return Number(this.sub_total()) + Number(this.caculate_tax()) - Number(this.caculate_discount());\n    },\n\n    caculate_discount: function () {\n      if (this.salesorder.discount_type == 'd') {\n        this.discount_total = this.salesorder.discount;\n      }\n\n      if (this.salesorder.discount_type == 'p') {\n        this.discount_total = (Number(this.sub_total()) + Number(this.total_tax)) * this.salesorder.discount / 100;\n        console.log(this.sub_total());\n      }\n\n      return this.discount_total;\n    }\n  }\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///67\n");

/***/ })

})