webpackHotUpdate(0,{

/***/ 126:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vuex__ = __webpack_require__(127);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_vue__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_axios__ = __webpack_require__(3);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_axios___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_axios__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__router_js__ = __webpack_require__(31);\n\n\n\n\n\n__WEBPACK_IMPORTED_MODULE_1_vue__[\"default\"].use(__WEBPACK_IMPORTED_MODULE_0_vuex__[\"a\" /* default */]);\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (new __WEBPACK_IMPORTED_MODULE_0_vuex__[\"a\" /* default */].Store({\n\n    state: {\n        totalTvCount: 10, // The TV inventory\n        token: localStorage.getItem('access_token') || null,\n        products: [],\n        query_param: { page: 1 }\n    },\n\n    getters: {\n\n        isLogedIn(state) {\n            return state.token != null;\n        }\n\n    },\n\n    mutations: {\n        setToken(state, token) {\n            state.token = token;\n        },\n        setProducts(state, products) {\n            state.products = products;\n        },\n\n        setQueryParam(state, query) {\n            state.query_param = query;\n        }\n\n    },\n\n    actions: {\n        getProducts({ dispatch, commit, state }) {\n\n            __WEBPACK_IMPORTED_MODULE_2_axios___default.a.defaults.headers.common['Authorization'] = 'Bearer ' + state.token;\n            return __WEBPACK_IMPORTED_MODULE_2_axios___default.a.get('api/products').then(response => {\n                commit('setProducts', response.data.data);\n            }).catch(error => {\n                console.log(error);\n            });\n        },\n\n        getProductTable(context, data) {\n            return new Promise((resolve, reject) => {\n                // Do something here... lets say, a http call using vue-resource\n                __WEBPACK_IMPORTED_MODULE_2_axios___default.a.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token;\n                __WEBPACK_IMPORTED_MODULE_2_axios___default.a.get(\"api/products?page=\" + data.page).then(response => {\n                    // http success, call the mutator and change something in state\n\n\n                    resolve(response); // Let the calling function know that http is done. You may send some data back\n                }, error => {\n                    // http failed, let the calling function know that action did not work out\n                    reject(error);\n                });\n            });\n        },\n\n        getPurchaseOrders(context, data) {\n            return new Promise((resolve, reject) => {\n                // Do something here... lets say, a http call using vue-resource\n                __WEBPACK_IMPORTED_MODULE_2_axios___default.a.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token;\n                __WEBPACK_IMPORTED_MODULE_2_axios___default.a.get(\"api/purchaseorders?page=\" + data.page).then(response => {\n                    // http success, call the mutator and change something in state\n\n\n                    resolve(response); // Let the calling function know that http is done. You may send some data back\n                }, error => {\n                    // http failed, let the calling function know that action did not work out\n                    reject(error);\n                });\n            });\n        },\n\n        action_logout({ dispatch, commit, state, getters }) {\n\n            if (getters.isLogedIn) {\n                __WEBPACK_IMPORTED_MODULE_2_axios___default.a.defaults.headers.common['Authorization'] = 'Bearer ' + state.token;\n                __WEBPACK_IMPORTED_MODULE_2_axios___default.a.post('api/user/logout').then(response => {\n                    console.log(response);\n                    localStorage.removeItem(\"access_token\");\n                    //this.$store.commit('setToken',token)\n                    commit('setToken', null);\n                    __WEBPACK_IMPORTED_MODULE_3__router_js__[\"a\" /* router */].push(\"/login\");\n                }).catch(errors => {\n                    console.log(errors);\n                });\n            }\n        },\n\n        refreshToken(context) {\n\n            __WEBPACK_IMPORTED_MODULE_2_axios___default.a.post('api/user/refresh', { token: context.state.token }).then(response => {\n                console.log(\"New Token\" + response.data.token);\n                context.state.token = response.data.token;\n            }).catch(error => {\n                console.log(\"error \" + error);\n            });\n        }\n    }\n\n}));\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///126\n");

/***/ })

})