webpackHotUpdate(0,{

/***/ 415:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_moment__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_moment___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_moment__);\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n    data() {\n        return {\n\n            xLabelsData: [],\n            datasets: [{\n                data: [70, 100, 400, 180, 100, 300, 500],\n                smooth: true,\n                showPoints: true,\n                fill: true,\n                className: \"curve1\"\n            }],\n            grid: {\n                verticalLines: true,\n                horizontalLines: true\n            },\n            labels: {\n                xLabels: this.xLabelsData,\n                yLabels: 5,\n                yLabelsTextFormatter: val => Math.round(val * 100) / 100\n            },\n            tooltipData: null,\n            popper: null,\n            popperIsActive: false\n        };\n    },\n    mounted() {\n\n        this.initPopper();\n\n        const stat_day = __WEBPACK_IMPORTED_MODULE_0_moment___default()().startOf('month').format('D');\n        const end_day = __WEBPACK_IMPORTED_MODULE_0_moment___default()().endOf('month').format('D');\n\n        var i;\n        for (i = stat_day; i <= end_day; i++) {\n            this.xLabelsData.push(i);\n            console.log(i);\n        }\n\n        this.labels.xLabels = this.xLabelsData;\n    },\n    methods: {\n        initPopper() {\n            const chart = document.querySelector(\".random-chart\");\n            const ref = chart.querySelector(\".active-line\");\n            const tooltip = this.$refs.tooltip;\n            this.popper = new Popper(ref, tooltip, {\n                placement: \"right\",\n                modifiers: {\n                    offset: {\n                        offset: \"0,10\"\n                    },\n                    preventOverflow: {\n                        boundariesElement: chart\n                    }\n                }\n            });\n        },\n        onMouseMove(params) {\n            this.popperIsActive = !!params;\n            this.popper.scheduleUpdate();\n            this.tooltipData = params || null;\n        },\n\n        fetch_data: function (vfrom, vto) {\n            let payload = {\n                from: vfrom,\n                to: vto\n            };\n            axios.post('api/dashboard/purchaseoorderdata', payload).then(response => {\n                this.mytime = response.data;\n                console.log(response.data);\n            }).catch(error => {\n                console.log(error);\n            });\n        }\n    }\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///415\n");

/***/ })

})